{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { setRoom } from '../../actions/joinRoomActions';\nimport { getQuestions } from '../../actions/gameActions';\nlet socket;\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const roomID = useSelector(state => state.joinRoom.room_id);\n  const questions = useSelector(state => state.game.prompts);\n  const ENDPOINT = 'localhost:3000';\n  const goToLobby = useSelector(state => state.userHome.goToLobby);\n  useEffect(() => {\n    console.log(goToLobby);\n\n    if (goToLobby === true) {\n      console.log(goToLobby);\n      console.log('this will run when the first user creates the room');\n    }\n\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    dispatch(setRoom(room));\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.emit('message');\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Main Lobby\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","io","setRoom","getQuestions","socket","MainLobby","props","dispatch","roomID","state","joinRoom","room_id","questions","game","prompts","ENDPOINT","goToLobby","userHome","console","log","parse","location","search","name","room","emit","off"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAQC,OAAR,QAAsB,+BAAtB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AAGA,IAAIC,MAAJ;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,OAAzB,CAA1B;AACA,QAAMC,SAAS,GAAGb,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACI,IAAN,CAAWC,OAArB,CAA7B;AACA,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAMC,SAAS,GAAGjB,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACQ,QAAN,CAAeD,SAAzB,CAA7B;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,QAAGA,SAAS,KAAK,IAAjB,EAAuB;AACnBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACH;;AALW,+BAMSnB,WAAW,CAACoB,KAAZ,CAAkBd,KAAK,CAACe,QAAN,CAAeC,MAAjC,CANT;AAAA,UAMLC,IANK,sBAMLA,IANK;AAAA,UAMCC,IAND,sBAMCA,IAND;;AAOZpB,IAAAA,MAAM,GAAGH,EAAE,CAACc,QAAD,CAAX;AAEAR,IAAAA,QAAQ,CAACL,OAAO,CAACsB,IAAD,CAAR,CAAR;AAEApB,IAAAA,MAAM,CAACqB,IAAP,CAAY,MAAZ,EAAqB;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAArB,EAAmC,MAAM,CAExC,CAFD;AAIA,WAAM,MAAM;AACRpB,MAAAA,MAAM,CAACqB,IAAP,CAAY,YAAZ;AACArB,MAAAA,MAAM,CAACsB,GAAP;AACH,KAHD;AAIH,GAnBQ,EAmBN,CAACX,QAAD,CAnBM,CAAT;AAqBDlB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACqB,IAAP,CAAY,SAAZ;AACH,GAFQ,CAAT;AAKC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAxCM;AA0CP,eAAepB,SAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport {setRoom} from '../../actions/joinRoomActions'\nimport {getQuestions} from '../../actions/gameActions'\n\n\nlet socket;\n\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const roomID = useSelector(state => state.joinRoom.room_id)\n    const questions = useSelector(state => state.game.prompts)\n    const ENDPOINT = 'localhost:3000'\n    const goToLobby = useSelector(state => state.userHome.goToLobby)\n    \n    useEffect(() => {\n        console.log(goToLobby)\n        if(goToLobby === true) {\n            console.log(goToLobby)\n            console.log('this will run when the first user creates the room')\n        }\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT);\n\n        dispatch(setRoom(room))\n        \n        socket.emit('join',  {name, room}, () => {\n\n        });\n\n        return() => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT])\n\n   useEffect(() => {\n       socket.emit('message')\n   })\n\n\n    return (\n        <div>\n            <h1>Main Lobby</h1>\n            <div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}