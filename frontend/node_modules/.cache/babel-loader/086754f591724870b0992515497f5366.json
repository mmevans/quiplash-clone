{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { addPlayer, getPlayersInRoom, setStage } from '../../actions/gameActions';\nlet socket;\nconst ENDPOINT = 'localhost:3000';\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const playerNames = useSelector(state => state.game.playerNames);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n  const stage = useSelector(state => state.game.stage);\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('add-player', player => {\n      dispatch(addPlayer(player));\n    });\n  });\n  console.log(\"Player Names:\", playerNames);\n  console.log(\"Players Array\", playersInRoom); // useEffect(() => {\n  //     socket.on('get-players', (room) => {\n  //         dispatch(getPlayersInRoom(room))\n  //     })\n  // }, [dispatch, playerNames, stage])\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main-lobby-screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" Users currently in the lobby Max 8\")));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","io","addPlayer","getPlayersInRoom","setStage","socket","ENDPOINT","MainLobby","props","dispatch","playerNames","state","game","playersInRoom","stage","parse","location","search","name","room","emit","on","player","console","log"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,EAAqCC,QAArC,QAAoD,2BAApD;AAEA,IAAIC,MAAJ;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,WAAW,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,WAArB,CAA/B;AACA,QAAMG,aAAa,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,aAArB,CAAjC;AACA,QAAMC,KAAK,GAAGf,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWE,KAArB,CAAzB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACSG,WAAW,CAACe,KAAZ,CAAkBP,KAAK,CAACQ,QAAN,CAAeC,MAAjC,CADT;AAAA,UACLC,IADK,sBACLA,IADK;AAAA,UACCC,IADD,sBACCA,IADD;;AAEZd,IAAAA,MAAM,GAAGJ,EAAE,CAACK,QAAD,CAAX;AACAD,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAApB,EAAkC,MAAM,CAEvC,CAFD;AAGH,GANQ,EAMN,CAACb,QAAD,CANM,CAAT;AAQAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACgB,EAAP,CAAU,YAAV,EAAyBC,MAAD,IAAY;AAChCb,MAAAA,QAAQ,CAACP,SAAS,CAACoB,MAAD,CAAV,CAAR;AACH,KAFD;AAGH,GAJQ,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bd,WAA7B;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BX,aAA7B,EAtBgC,CAwBhC;AACA;AACA;AACA;AACA;;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CADJ,CADJ;AAOC,CApCE;AAqCP,eAAeN,SAAf","sourcesContent":["\nimport React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport {addPlayer, getPlayersInRoom, setStage} from '../../actions/gameActions'\n\nlet socket;\nconst ENDPOINT = 'localhost:3000'\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const playerNames = useSelector(state => state.game.playerNames)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    const stage = useSelector(state => state.game.stage)\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT);\n        socket.emit('join', {name, room}, () => {\n\n        })\n    }, [ENDPOINT])\n\n    useEffect(() => {\n        socket.on('add-player', (player) => {\n            dispatch(addPlayer(player))\n        })\n    })\n\n    console.log(\"Player Names:\", playerNames)\n\n    console.log(\"Players Array\", playersInRoom)\n\n    // useEffect(() => {\n    //     socket.on('get-players', (room) => {\n    //         dispatch(getPlayersInRoom(room))\n    //     })\n    // }, [dispatch, playerNames, stage])\n    return (\n        <div>\n            <div className='main-lobby-screen'>\n                <p> Users currently in the lobby Max 8</p>\n            </div>\n        </div>\n    )\n    }\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}