{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { setName, setRoom } from '../../actions/joinRoomActions';\nimport { getStandardDeck, getPlayers, clearPlayers } from '../../actions/gameActions';\nlet socket;\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const roomId = useSelector(state => state.joinRoom.room_id);\n  const username = useSelector(state => state.joinRoom.name);\n  const deck = useSelector(state => state.game.prompts);\n  const deckName = useSelector(state => state.game.deckName);\n  const listOfPlayers = useSelector(state => state.game.players);\n  const ENDPOINT = 'localhost:3000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    dispatch(clearPlayers());\n    dispatch(setName(name));\n    dispatch(setRoom(room));\n    dispatch(getStandardDeck());\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('player-list', player => {\n      if (player.player !== \"undefined\") {\n        dispatch(getPlayers(player.player));\n      }\n    });\n  }, [listOfPlayers]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Main Lobby\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, listOfPlayers.length ? listOfPlayers.map(player => React.createElement(\"p\", {\n    key: player.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, player)) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"No players have been loaded\")));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","io","setName","setRoom","getStandardDeck","getPlayers","clearPlayers","socket","MainLobby","props","dispatch","roomId","state","joinRoom","room_id","username","name","deck","game","prompts","deckName","listOfPlayers","players","ENDPOINT","parse","location","search","room","emit","off","on","player","length","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,+BAA/B;AACA,SAAQC,eAAR,EAAyBC,UAAzB,EAAqCC,YAArC,QAAwD,2BAAxD;AAGA,IAAIC,MAAJ;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,MAAM,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,OAAzB,CAA1B;AACA,QAAMC,QAAQ,GAAGhB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeG,IAAzB,CAA5B;AACA,QAAMC,IAAI,GAAGlB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACM,IAAN,CAAWC,OAArB,CAAxB;AACA,QAAMC,QAAQ,GAAGrB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACM,IAAN,CAAWE,QAArB,CAA5B;AACA,QAAMC,aAAa,GAAGtB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACM,IAAN,CAAWI,OAArB,CAAjC;AACA,QAAMC,QAAQ,GAAG,gBAAjB;AAGA1B,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACSG,WAAW,CAACwB,KAAZ,CAAkBf,KAAK,CAACgB,QAAN,CAAeC,MAAjC,CADT;AAAA,UACLV,IADK,sBACLA,IADK;AAAA,UACCW,IADD,sBACCA,IADD;;AAEZpB,IAAAA,MAAM,GAAGN,EAAE,CAACsB,QAAD,CAAX;AACAb,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACAI,IAAAA,QAAQ,CAACR,OAAO,CAACc,IAAD,CAAR,CAAR;AACAN,IAAAA,QAAQ,CAACP,OAAO,CAACwB,IAAD,CAAR,CAAR;AACAjB,IAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AAEAG,IAAAA,MAAM,CAACqB,IAAP,CAAY,MAAZ,EAAqB;AAACZ,MAAAA,IAAD;AAAOW,MAAAA;AAAP,KAArB,EAAmC,MAAM,CAExC,CAFD;AAIA,WAAM,MAAM;AACRpB,MAAAA,MAAM,CAACqB,IAAP,CAAY,YAAZ;AACArB,MAAAA,MAAM,CAACsB,GAAP;AACH,KAHD;AAIH,GAhBQ,EAgBN,CAACN,QAAD,CAhBM,CAAT;AAkBA1B,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACuB,EAAP,CAAU,aAAV,EAA0BC,MAAD,IAAY;AACjC,UAAGA,MAAM,CAACA,MAAP,KAAkB,WAArB,EAAkC;AAC9BrB,QAAAA,QAAQ,CAACL,UAAU,CAAC0B,MAAM,CAACA,MAAR,CAAX,CAAR;AACH;AACJ,KAJD;AAKH,GANQ,EAMN,CAACV,aAAD,CANM,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,aAAa,CAACW,MAAd,GAAuBX,aAAa,CAACY,GAAd,CAAmBF,MAAD,IAAa;AAAG,IAAA,GAAG,EAAEA,MAAM,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBH,MAApB,CAA/B,CAAvB,GAA0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAD3F,CAFJ,CADJ;AAQH,CA7CM;AA+CP,eAAevB,SAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport {setName, setRoom} from '../../actions/joinRoomActions'\nimport {getStandardDeck, getPlayers, clearPlayers} from '../../actions/gameActions'\n\n\nlet socket;\n\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const roomId = useSelector(state => state.joinRoom.room_id)\n    const username = useSelector(state => state.joinRoom.name)\n    const deck = useSelector(state => state.game.prompts)\n    const deckName = useSelector(state => state.game.deckName)\n    const listOfPlayers = useSelector(state => state.game.players)\n    const ENDPOINT = 'localhost:3000'\n\n    \n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT);\n        dispatch(clearPlayers())\n        dispatch(setName(name))\n        dispatch(setRoom(room))\n        dispatch(getStandardDeck())\n        \n        socket.emit('join',  {name, room}, () => {\n\n        });\n\n        return() => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT])\n\n    useEffect(() => {\n        socket.on('player-list', (player) => {\n            if(player.player !== \"undefined\") {\n                dispatch(getPlayers(player.player));\n            }\n        })\n    }, [listOfPlayers])\n\n\n    return (\n        <div>\n            <h1>Main Lobby</h1>\n            <div>\n            {listOfPlayers.length ? listOfPlayers.map((player) => (<p key={player.id}>{player}</p>)) : <p>No players have been loaded</p>}\n            </div>\n        </div>\n    )\n}\n\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}