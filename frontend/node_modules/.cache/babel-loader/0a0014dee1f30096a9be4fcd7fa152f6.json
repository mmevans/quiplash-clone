{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/quiplash_clone/frontend/src/components/Game/QuestionScreen.js\";\nimport React, { useEffect } from 'react';\nimport Winner from './Winner';\nimport { Button } from 'semantic-ui-react';\nimport './votingScreenRound1.css';\nimport { determineWinner, goToNextQuestion } from '../../actions/gameActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport socket from '../socket/socket';\nexport const QuestionScreen = props => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('cast-go-to-next-question', callback => {\n      dispatch(goToNextQuestion());\n    });\n  });\n\n  const getRoundWinner = () => {\n    dispatch(determineWinner());\n  };\n\n  const goToNextRound = () => {\n    socket.emit('go-to-next-question', () => {});\n  };\n\n  return React.createElement(\"div\", {\n    className: \"votingScreenRound1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.questions_round_1[props.selectedQuestion].prompt)), React.createElement(\"h2\", {\n    className: \"answer1Round1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Answer 1\"), React.createElement(\"h2\", {\n    className: \"answer2Round1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Answer 2\"), props.questions_round_1[props.selectedQuestion].answers.map((answer, i) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"speech\".concat(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, answer))), React.createElement(Winner, {\n    winner: props.round_winner,\n    points: props.round_winner_points,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: \"redRound1Voting\",\n    src: \"https://jackboxgames.com/wp-content/uploads/2019/07/Red.gif\",\n    alt: \"quiplash icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    className: \"blueRound1Voting\",\n    src: \"https://jackboxgames.com/wp-content/uploads/2019/07/Blue.gif\",\n    alt: \"quiplash icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"getRoundWinner\",\n    size: \"medium\",\n    color: \"grey\",\n    onClick: () => getRoundWinner(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Get Winner\"), React.createElement(Button, {\n    className: \"nextRound\",\n    onClick: () => goToNextRound(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Next Round\"));\n};\nexport default QuestionScreen;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/quiplash_clone/frontend/src/components/Game/QuestionScreen.js"],"names":["React","useEffect","Winner","Button","determineWinner","goToNextQuestion","useDispatch","useSelector","socket","QuestionScreen","props","dispatch","on","callback","getRoundWinner","goToNextRound","emit","questions_round_1","selectedQuestion","prompt","answers","map","answer","i","round_winner","round_winner_points"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAO,0BAAP;AACA,SAAQC,eAAR,EAAyBC,gBAAzB,QAAgD,2BAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,MAAM,CAACI,EAAP,CAAU,0BAAV,EAAuCC,QAAD,IAAc;AAChDF,MAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACH,KAFD;AAGH,GAJQ,CAAT;;AAMA,QAAMS,cAAc,GAAG,MAAM;AACzBH,IAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR;AACH,GAFD;;AAIA,QAAMW,aAAa,GAAG,MAAM;AACpBP,IAAAA,MAAM,CAACQ,IAAP,CAAY,qBAAZ,EAAmC,MAAM,CAAE,CAA3C;AAEP,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAK,CAACO,iBAAN,CAAwBP,KAAK,CAACQ,gBAA9B,EAAgDC,MAArD,CADF,CADF,EAII;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAMKT,KAAK,CAACO,iBAAN,CAAwBP,KAAK,CAACQ,gBAA9B,EAAgDE,OAAhD,CAAwDC,GAAxD,CAA4D,CAACC,MAAD,EAAQC,CAAR,KACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,kBAAWA,CAAX,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BD,MAA7B,CADJ,CADH,CANL,EAWI,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEZ,KAAK,CAACc,YAAtB;AAAoC,IAAA,MAAM,EAAEd,KAAK,CAACe,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAC,6DAArC;AAAmG,IAAA,GAAG,EAAC,eAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,GAAG,EAAC,8DAAtC;AAAqG,IAAA,GAAG,EAAC,eAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAcI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAiD,IAAA,KAAK,EAAC,MAAvD;AAA8D,IAAA,OAAO,EAAE,MAAMX,cAAc,EAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,EAeI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAE,MAAMC,aAAa,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ,CADJ;AAoBH,CAtCM;AAwCP,eAAeN,cAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Winner from './Winner'\nimport {Button} from 'semantic-ui-react'\nimport './votingScreenRound1.css'\nimport {determineWinner, goToNextQuestion} from '../../actions/gameActions'\nimport { useDispatch, useSelector } from 'react-redux';\nimport socket from '../socket/socket'\n\n\nexport const QuestionScreen = (props) => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        socket.on('cast-go-to-next-question', (callback) => {\n            dispatch(goToNextQuestion())\n        })\n    })\n\n    const getRoundWinner = () => {\n        dispatch(determineWinner())\n    } \n\n    const goToNextRound = () => {\n            socket.emit('go-to-next-question', () => {})\n\n    }\n\n    return (\n        <div className='votingScreenRound1'>\n          <div>\n            <h1>{props.questions_round_1[props.selectedQuestion].prompt}</h1> \n          </div>\n            <h2 className='answer1Round1'>Answer 1</h2>\n            <h2 className='answer2Round1'>Answer 2</h2>\n            {props.questions_round_1[props.selectedQuestion].answers.map((answer,i) => (\n                <div>\n                    <p className={`speech${i}`}>{answer}</p>\n                </div>\n            ))}\n            <Winner winner={props.round_winner} points={props.round_winner_points}/>\n            <img className='redRound1Voting' src='https://jackboxgames.com/wp-content/uploads/2019/07/Red.gif' alt='quiplash icon'></img>\n            <img className='blueRound1Voting' src='https://jackboxgames.com/wp-content/uploads/2019/07/Blue.gif' alt='quiplash icon'></img>\n            <Button className='getRoundWinner' size='medium' color='grey' onClick={() => getRoundWinner()}>Get Winner</Button>\n            <Button className='nextRound' onClick={() => goToNextRound()}>Next Round</Button>\n        </div>\n    )\n\n}\n\nexport default QuestionScreen"]},"metadata":{},"sourceType":"module"}