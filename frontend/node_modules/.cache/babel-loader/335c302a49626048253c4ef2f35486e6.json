{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/UserHomepage/UserHomepage.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { goToLobby, generateRoomID } from '../../actions/joinRoomActions';\nimport { Redirect } from 'react-router-dom';\nexport const UserHomepage = props => {\n  const dispatch = useDispatch();\n  const lobby = useSelector(state => state.userHome.goToLobby);\n  const room_id = useSelector(state => state.userHome.room_id);\n  const username = useSelector(state => state.signup.user.username); // create another method for getting the username of the user that just logged in\n  // create a useEffect that changes isLoggedIn to true when a user logs in\n\n  const handleChange = () => {\n    dispatch(generateRoomID(5));\n    dispatch(goToLobby());\n  };\n\n  if (lobby === true) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/main-lobby?name=\".concat(username, \"&room=\").concat(room_id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"This the users homepage\"), React.createElement(\"div\", {\n    onClick: () => handleChange(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Create a Lobby\")), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Create your own collection\"));\n};\nexport default UserHomepage;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/UserHomepage/UserHomepage.js"],"names":["React","useEffect","useDispatch","useSelector","goToLobby","generateRoomID","Redirect","UserHomepage","props","dispatch","lobby","state","userHome","room_id","username","signup","user","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,+BAA1C;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAGA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACnC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,KAAK,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeR,SAAzB,CAAzB;AACA,QAAMS,OAAO,GAAGV,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,OAAzB,CAA3B;AACA,QAAMC,QAAQ,GAAGX,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACI,MAAN,CAAaC,IAAb,CAAkBF,QAA5B,CAA5B,CAJmC,CAKnC;AACA;;AACA,QAAMG,YAAY,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAACJ,cAAc,CAAC,CAAD,CAAf,CAAR;AACAI,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACH,GAHD;;AAKA,MAAGM,KAAK,KAAK,IAAb,EAAmB;AACf,WAAQ,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,6BAAsBI,QAAtB,mBAAuCD,OAAvC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEA;AAAK,IAAA,OAAO,EAAE,MAAMI,YAAY,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CAFA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCALA,CADJ;AASH,CAxBM;AA0BP,eAAeV,YAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { goToLobby, generateRoomID } from '../../actions/joinRoomActions'\nimport {Redirect} from 'react-router-dom'\n\n\nexport const UserHomepage = (props) => {\n    const dispatch = useDispatch();\n    const lobby = useSelector(state => state.userHome.goToLobby)\n    const room_id = useSelector(state => state.userHome.room_id)\n    const username = useSelector(state => state.signup.user.username)\n    // create another method for getting the username of the user that just logged in\n    // create a useEffect that changes isLoggedIn to true when a user logs in\n    const handleChange = () => {\n        dispatch(generateRoomID(5))\n        dispatch(goToLobby())\n    }\n\n    if(lobby === true) {\n        return  <Redirect push to={`/main-lobby?name=${username}&room=${room_id}`}/>\n    }\n    return(\n        <div>\n        <h1>This the users homepage</h1>\n        <div onClick={() => handleChange()}>\n        <h3>Create a Lobby</h3>\n        </div>\n        <h3>Create your own collection</h3>\n        </div>\n    )\n}\n\nexport default UserHomepage"]},"metadata":{},"sourceType":"module"}