{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport PlayerContainer from './PlayerContainer';\nimport Game from '../Game/Game';\nimport io from 'socket.io-client';\nimport { Button } from 'semantic-ui-react';\nimport { setRoom } from '../../actions/joinRoomActions';\nimport { removePlayer, removeAllPlayers, startGame, getPlayers } from '../../actions/gameActions';\nlet socket;\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const roomID = useSelector(state => state.userHome.room_id);\n  const ENDPOINT = 'localhost:3000';\n  const createdLobby = useSelector(state => state.userHome.goToLobby);\n  const gameStarted = useSelector(state => state.game.gameStarted);\n  const stage = useSelector(state => state.game.stage);\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    dispatch(setRoom(roomID));\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    const player = queryString.parse(props.location.search);\n    dispatch(addPlayer(player));\n  }, [dispatch]);\n  useEffect(() => {\n    const _queryString$parse2 = queryString.parse(props.location.search),\n          name = _queryString$parse2.name,\n          room = _queryString$parse2.room;\n\n    dispatch(getPlayers(room));\n  }, [dispatch]);\n\n  const start = () => {\n    dispatch(startGame());\n  };\n\n  if (gameStarted === false) {\n    return React.createElement(Game, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Main Lobby\"), React.createElement(\"div\", {\n      className: \"main-lobby-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => dispatch(removeAllPlayers()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Clear Lobby\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Users currently in the lobby Max 8\"), React.createElement(Button, {\n      onClick: () => start(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Start Game\")));\n  }\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js"],"names":["React","useEffect","useCallback","useDispatch","useSelector","queryString","PlayerContainer","Game","io","Button","setRoom","removePlayer","removeAllPlayers","startGame","getPlayers","socket","MainLobby","props","dispatch","roomID","state","userHome","room_id","ENDPOINT","createdLobby","goToLobby","gameStarted","game","stage","parse","location","search","name","room","emit","off","player","addPlayer","start"],"mappings":"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","sourcesContent":["import React, {useEffect, useCallback} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport PlayerContainer from './PlayerContainer'\nimport Game from '../Game/Game';\nimport io from 'socket.io-client';\nimport { Button } from 'semantic-ui-react';\nimport {setRoom} from '../../actions/joinRoomActions'\nimport { removePlayer, removeAllPlayers, startGame, getPlayers} from '../../actions/gameActions'\n\nlet socket;\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const roomID = useSelector(state => state.userHome.room_id)\n    const ENDPOINT = 'localhost:3000'\n    const createdLobby = useSelector(state => state.userHome.goToLobby)\n    const gameStarted = useSelector(state => state.game.gameStarted)\n    const stage = useSelector(state => state.game.stage)\n\n    useEffect(() => {\n            const {name, room} = queryString.parse(props.location.search)\n            socket = io(ENDPOINT);\n            dispatch(setRoom(roomID))\n            socket.emit('join',  {name, room}, () => {});\n            return() => {\n                socket.emit('disconnect');\n                socket.off();\n            }\n    }, [dispatch]);\n\n\n    useEffect(() => {\n        const player = queryString.parse(props.location.search)\n        dispatch(addPlayer(player))\n    }, [dispatch]);\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        dispatch(getPlayers(room))\n    }, [dispatch])\n\n\n    const start = () => {\n        dispatch(startGame())\n    }\n\n    if(gameStarted === false) {\n        return (\n           <Game/>\n        )\n    } else {\n    return (\n        <div>\n            <h1>Main Lobby</h1>\n            <div className='main-lobby-screen'>\n                <button onClick={()=> dispatch(removeAllPlayers())}>Clear Lobby</button>\n                <p> Users currently in the lobby Max 8</p>\n                \n                <Button onClick={() => start()}>Start Game</Button>\n            </div>\n        </div>\n    )}\n}\n\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}