{"ast":null,"code":"import { SET_PROMPTS, GET_PLAYER_INFO } from './types';\nexport const setPrompts = player => dispatch => {\n  dispatch({\n    type: SET_PROMPTS,\n    action: player\n  });\n};\nexport const getPlayerInfo = (playerName, room) => async dispatch => {\n  const url = 'http://localhost:3000/players-in-game';\n  const res = await fetch(url);\n  const players = await res.json();\n  console.log(players);\n  debugger;\n  var prompts = [];\n  players.forEach(player => {\n    if (player.name === playerName && player.room_id === room) {\n      prompts.push(player.questions_round_1[0], player.questions_round_1[1], player.questions_round_2[0], player.questions_round_2[1], player.questions_round_3[0], player.questions_round_3[1]);\n    }\n  });\n  debugger;\n  dispatch({\n    type: GET_PLAYER_INFO,\n    prompts\n  });\n};","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/actions/playerActions.js"],"names":["SET_PROMPTS","GET_PLAYER_INFO","setPrompts","player","dispatch","type","action","getPlayerInfo","playerName","room","url","res","fetch","players","json","console","log","prompts","forEach","name","room_id","push","questions_round_1","questions_round_2","questions_round_3"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,SAA3C;AAIA,OAAO,MAAMC,UAAU,GAAIC,MAAD,IAAYC,QAAQ,IAAI;AAC9CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEL,WADD;AAELM,IAAAA,MAAM,EAAEH;AAFH,GAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMI,aAAa,GAAG,CAACC,UAAD,EAAaC,IAAb,KAAsB,MAAML,QAAN,IAAkB;AACjE,QAAMM,GAAG,GAAG,uCAAZ;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACA,QAAMG,OAAO,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA;AACA,MAAII,OAAO,GAAG,EAAd;AAEAJ,EAAAA,OAAO,CAACK,OAAR,CAAiBf,MAAD,IAAY;AACxB,QAAGA,MAAM,CAACgB,IAAP,KAAgBX,UAAhB,IAA8BL,MAAM,CAACiB,OAAP,KAAmBX,IAApD,EAA0D;AACtDQ,MAAAA,OAAO,CAACI,IAAR,CAAalB,MAAM,CAACmB,iBAAP,CAAyB,CAAzB,CAAb,EAA0CnB,MAAM,CAACmB,iBAAP,CAAyB,CAAzB,CAA1C,EAAuEnB,MAAM,CAACoB,iBAAP,CAAyB,CAAzB,CAAvE,EAAoGpB,MAAM,CAACoB,iBAAP,CAAyB,CAAzB,CAApG,EAAiIpB,MAAM,CAACqB,iBAAP,CAAyB,CAAzB,CAAjI,EAA8JrB,MAAM,CAACqB,iBAAP,CAAyB,CAAzB,CAA9J;AACH;AACJ,GAJD;AAKA;AACApB,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEJ,eADD;AAELgB,IAAAA;AAFK,GAAD,CAAR;AAIH,CAlBM","sourcesContent":["import {SET_PROMPTS, GET_PLAYER_INFO} from './types'\n\n\n\nexport const setPrompts = (player) => dispatch => {\n    dispatch({\n        type: SET_PROMPTS,\n        action: player\n    })\n}\n\nexport const getPlayerInfo = (playerName, room) => async dispatch => {\n    const url = 'http://localhost:3000/players-in-game'\n    const res = await fetch(url)\n    const players = await res.json()\n    console.log(players)\n    debugger\n    var prompts = [];\n\n    players.forEach((player) => {\n        if(player.name === playerName && player.room_id === room) {\n            prompts.push(player.questions_round_1[0], player.questions_round_1[1], player.questions_round_2[0], player.questions_round_2[1], player.questions_round_3[0], player.questions_round_3[1])\n        }\n    })\n    debugger\n    dispatch({\n        type: GET_PLAYER_INFO,\n        prompts\n    })\n}"]},"metadata":{},"sourceType":"module"}