{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport { getPlayersInRoom, startingGame, changePlayerView, generateQuestions, saveQuestions } from '../../actions/gameActions';\nimport PlayerContainer from './PlayerContainer';\nimport { Button } from 'semantic-ui-react';\nimport Game from '../Game/Game';\nimport PlayerView from '../PlayerView/PlayerView';\nimport socket from '../socket/socket';\nimport './mainlobby.css';\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const goToLobby = useSelector(state => state.userHome.goToLobby);\n  const playerNames = useSelector(state => state.game.playerNames);\n  const gameStarted = useSelector(state => state.game.gameStarted);\n  const playerView = useSelector(state => state.game.playerView);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n\n  const _queryString$parse = queryString.parse(props.location.search),\n        name = _queryString$parse.name,\n        room = _queryString$parse.room,\n        lobby = _queryString$parse.lobby;\n\n  useEffect(() => {\n    if (goToLobby || lobby) {\n      socket.emit('create-game', {\n        name,\n        room\n      }, () => {});\n    } else {\n      socket.emit('join', {\n        name,\n        room\n      }, () => {});\n    }\n  });\n  useEffect(() => {\n    socket.on('get-players-in-room', async (room, callback) => {\n      dispatch(getPlayersInRoom(room));\n    });\n  });\n  useEffect(() => {\n    socket.on('change-player-view', questions => {\n      dispatch(saveQuestions);\n      dispatch(changePlayerView());\n      dispatch(saveQuestions(questions));\n    });\n  }, []);\n\n  const startGame = () => {\n    const _queryString$parse2 = queryString.parse(props.location.search),\n          room = _queryString$parse2.room;\n\n    dispatch(startingGame());\n    dispatch(generateQuestions(room));\n  };\n\n  if ((goToLobby || lobby) && gameStarted === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-lobby-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"roomIDBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" Room ID: \", room)), React.createElement(PlayerContainer, {\n      players: playerNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"startGameButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => startGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Start Game\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  } else if (gameStarted === true) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Game, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  } else if (playerView === true) {\n    return React.createElement(PlayerView, {\n      players: playersInRoom,\n      location: props.location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    class: \"waitingScreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Waiting For Other Players\"));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","getPlayersInRoom","startingGame","changePlayerView","generateQuestions","saveQuestions","PlayerContainer","Button","Game","PlayerView","socket","MainLobby","props","dispatch","goToLobby","state","userHome","playerNames","game","gameStarted","playerView","playersInRoom","parse","location","search","name","room","lobby","emit","on","callback","questions","startGame"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAAQC,gBAAR,EAA0BC,YAA1B,EAAwCC,gBAAxC,EAA0DC,iBAA1D,EAA6EC,aAA7E,QAAiG,2BAAjG;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,iBAAP;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,SAAS,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,SAAzB,CAA7B;AACA,QAAMG,WAAW,GAAGlB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAWD,WAArB,CAA/B;AACA,QAAME,WAAW,GAAGpB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAWC,WAArB,CAA/B;AACA,QAAMC,UAAU,GAAGrB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAWE,UAArB,CAA9B;AACA,QAAMC,aAAa,GAAGtB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAWG,aAArB,CAAjC;;AANgC,6BAOJrB,WAAW,CAACsB,KAAZ,CAAkBV,KAAK,CAACW,QAAN,CAAeC,MAAjC,CAPI;AAAA,QAOzBC,IAPyB,sBAOzBA,IAPyB;AAAA,QAOnBC,IAPmB,sBAOnBA,IAPmB;AAAA,QAObC,KAPa,sBAObA,KAPa;;AAShC9B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGiB,SAAS,IAAIa,KAAhB,EAAwB;AACpBjB,MAAAA,MAAM,CAACkB,IAAP,CAAY,aAAZ,EAA2B;AAACH,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAA3B,EAAyC,MAAM,CAAE,CAAjD;AACH,KAFD,MAEO;AACHhB,MAAAA,MAAM,CAACkB,IAAP,CAAY,MAAZ,EAAoB;AAACH,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAApB,EAAkC,MAAM,CACvC,CADD;AAEH;AACJ,GAPQ,CAAT;AASA7B,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACmB,EAAP,CAAU,qBAAV,EAAiC,OAAOH,IAAP,EAAaI,QAAb,KAA0B;AACvDjB,MAAAA,QAAQ,CAACZ,gBAAgB,CAACyB,IAAD,CAAjB,CAAR;AACH,KAFD;AAGH,GAJQ,CAAT;AAMA7B,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,MAAM,CAACmB,EAAP,CAAU,oBAAV,EAAiCE,SAAD,IAAe;AAC3ClB,MAAAA,QAAQ,CAACR,aAAD,CAAR;AACAQ,MAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACAU,MAAAA,QAAQ,CAACR,aAAa,CAAC0B,SAAD,CAAd,CAAR;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,SAAS,GAAG,MAAM;AAAA,gCACLhC,WAAW,CAACsB,KAAZ,CAAkBV,KAAK,CAACW,QAAN,CAAeC,MAAjC,CADK;AAAA,UACbE,IADa,uBACbA,IADa;;AAEpBb,IAAAA,QAAQ,CAACX,YAAY,EAAb,CAAR;AACAW,IAAAA,QAAQ,CAACT,iBAAiB,CAACsB,IAAD,CAAlB,CAAR;AACH,GAJD;;AAOA,MAAG,CAACZ,SAAS,IAAIa,KAAd,KAAyBR,WAAW,KAAK,KAA5C,EAAmD;AAC/C,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAcO,IAAd,CADJ,CADJ,EAII,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAET,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,MAAMe,SAAS,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CALJ,CADJ,CADJ;AAiBH,GAlBD,MAkBS,IAAIb,WAAW,KAAK,IAApB,EAA0B;AAC/B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH,GAPQ,MAOF,IAAIC,UAAU,KAAK,IAAnB,EAAyB;AAC5B,WACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAIC,aAAvB;AAAsC,MAAA,QAAQ,EAAET,KAAK,CAACW,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AACG,SACI;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,CADJ;AAKH,CA1EE;AA2EP,eAAeZ,SAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport {getPlayersInRoom, startingGame, changePlayerView, generateQuestions, saveQuestions} from '../../actions/gameActions'\nimport PlayerContainer from './PlayerContainer'\nimport {Button} from 'semantic-ui-react'\nimport Game from '../Game/Game'\nimport PlayerView from '../PlayerView/PlayerView'\nimport socket from '../socket/socket'\nimport './mainlobby.css'\n\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const goToLobby = useSelector(state => state.userHome.goToLobby)\n    const playerNames = useSelector(state => state.game.playerNames)\n    const gameStarted = useSelector(state => state.game.gameStarted)\n    const playerView = useSelector(state => state.game.playerView)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    const {name, room, lobby} = queryString.parse(props.location.search)\n\n    useEffect(() => {\n        if(goToLobby || lobby ) {\n            socket.emit('create-game', {name, room}, () => {})\n        } else {\n            socket.emit('join', {name, room}, () => {\n            }) \n        }\n    })\n\n    useEffect(() => {\n        socket.on('get-players-in-room', async (room, callback) => {\n            dispatch(getPlayersInRoom(room))\n        })\n    })\n\n    useEffect(() => {\n        socket.on('change-player-view', (questions) => {\n            dispatch(saveQuestions)\n            dispatch(changePlayerView())\n            dispatch(saveQuestions(questions))\n        })\n    }, [])\n\n    const startGame = () => {\n        const {room} = queryString.parse(props.location.search)\n        dispatch(startingGame())\n        dispatch(generateQuestions(room))\n    } \n  \n\n    if((goToLobby || lobby)  && gameStarted === false) {\n        return (\n            <div>\n                <div className='main-lobby-screen'>\n                    <div className='roomIDBox'>\n                        <p> Room ID: {room}</p>\n                        </div>\n                    <PlayerContainer players={playerNames}/>\n                    <div>\n                        <div className='startGameButton'>\n                            <Button size='massive' onClick={() => startGame()}>Start Game</Button>\n                        </div>\n                        <div>\n                        </div>\n                    </div>\n                    </div>\n            </div>\n    )\n    }   else if (gameStarted === true) {\n        return (\n            <div>\n                <Game/>\n             </div>\n        \n        )\n    } else if (playerView === true) {\n        return (\n            <PlayerView players = {playersInRoom} location={props.location}/>\n        )\n    }\n        return (\n            <div class='waitingScreen'>\n                <h1>Waiting For Other Players</h1>\n            </div>\n        )\n    }\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}