{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport PlayerList from './PlayerList';\nimport io from 'socket.io-client';\nimport { Button } from 'semantic-ui-react';\nimport { setRoom } from '../../actions/joinRoomActions';\nimport { getQuestions, addPlayer, removePlayer, removeAllPlayers } from '../../actions/gameActions';\nimport $ from 'jquery';\nlet socket;\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const roomID = useSelector(state => state.userHome.room_id);\n  const ENDPOINT = 'localhost:3000';\n  const createdLobby = useSelector(state => state.userHome.goToLobby);\n  var questions = useSelector(state => state.game.questions);\n  var playerArray = [];\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n\n    if (createdLobby === true) {\n      dispatch(setRoom(roomID));\n      dispatch(getQuestions());\n    }\n\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    socket.emit('addPlayer', name); // dispatch(addPlayer(name))\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('allPlayers', function (name) {\n      playersArray.push(name);\n    });\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Main Lobby\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => dispatch(removeAllPlayers()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Clear All Players\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" Users currently in the lobby Max 8\"), React.createElement(\"ul\", {\n    className: \"circle-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, playerArray !== undefined ? playersArray.map(player => {\n    return React.createElement(\"li\", {\n      className: \"playerInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://sanin.dev/assets/thumbnails/quiplash.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Name: \", player));\n  }) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" No playersArray\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"A button to start the game\"), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Start Game\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" where the questions will be loaded\")));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","PlayerList","io","Button","setRoom","getQuestions","addPlayer","removePlayer","removeAllPlayers","$","socket","MainLobby","props","dispatch","roomID","state","userHome","room_id","ENDPOINT","createdLobby","goToLobby","questions","game","playerArray","parse","location","search","name","room","emit","off","on","playersArray","push","undefined","map","player"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport PlayerList from './PlayerList'\nimport io from 'socket.io-client';\nimport { Button } from 'semantic-ui-react'\nimport {setRoom} from '../../actions/joinRoomActions'\nimport {getQuestions, addPlayer, removePlayer, removeAllPlayers} from '../../actions/gameActions'\nimport $ from 'jquery';\nlet socket;\n\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const roomID = useSelector(state => state.userHome.room_id)\n    const ENDPOINT = 'localhost:3000'\n    const createdLobby = useSelector(state => state.userHome.goToLobby)\n    var questions = useSelector(state => state.game.questions)\n    var playerArray = [];\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT);\n\n        if(createdLobby === true) {\n            dispatch(setRoom(roomID))\n            dispatch(getQuestions())\n        } \n        socket.emit('join',  {name, room}, () => {\n        });\n        socket.emit('addPlayer', name)\n        // dispatch(addPlayer(name))\n        return() => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT])\n\n    useEffect(() => {\n        socket.on('allPlayers', function(name) {\n            playersArray.push(name)\n        })\n    })\n    return (\n        <div>\n            <h1>Main Lobby</h1>\n            <div>\n                <button onClick={()=> dispatch(removeAllPlayers())}>Clear All Players</button>\n                <p> Users currently in the lobby Max 8</p>\n                <ul className='circle-container'>\n                    {playerArray !== undefined ? playersArray.map((player) => {\n                        return <li className='playerInfo' ><img src='https://sanin.dev/assets/thumbnails/quiplash.png'></img><p>Name: {player}</p></li>\n                    }) : <p> No playersArray</p>}\n                </ul>\n                <p>A button to start the game</p>\n                <Button>Start Game</Button>\n                <p> where the questions will be loaded</p>\n            </div>\n        </div>\n    )\n}\n\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}