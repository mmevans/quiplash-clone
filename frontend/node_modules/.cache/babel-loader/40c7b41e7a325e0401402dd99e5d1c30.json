{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst middleware = [thunk];\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['gameReducer'],\n  blacklist: ['userHome', 'joinRoom', 'signup', 'landing']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())); //Middleware: Redux Persist Persiter\n\nlet persistor = persistStore(store);\nstore.subscribe(() => saveToLocalStorage(store.getState()));\nexport { store, persistor };","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","thunk","rootReducer","persistStore","persistReducer","storage","middleware","persistConfig","key","whitelist","blacklist","persistedReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","subscribe","saveToLocalStorage","getState"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AAEA,MAAMM,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA,OAAO,EAAEA,OAFS;AAGlBI,EAAAA,SAAS,EAAE,CACT,aADS,CAHO;AAMlBC,EAAAA,SAAS,EAAE,CACP,UADO,EAEP,UAFO,EAGP,QAHO,EAIP,SAJO;AANO,CAAtB;AAaA,MAAMC,gBAAgB,GAAGP,cAAc,CAACG,aAAD,EAAgBL,WAAhB,CAAvC;AAEA,MAAMU,KAAK,GAAGd,WAAW,CACrBa,gBADqB,EAErBZ,OAAO,CACPC,eAAe,CAAC,GAAGM,UAAJ,CADR,EAEPO,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFhC,CAFc,CAAzB,C,CAQA;;AACA,IAAIC,SAAS,GAAGZ,YAAY,CAACS,KAAD,CAA5B;AAGAA,KAAK,CAACI,SAAN,CAAgB,MAAMC,kBAAkB,CAACL,KAAK,CAACM,QAAN,EAAD,CAAxC;AAEA,SACIN,KADJ,EAEIG,SAFJ","sourcesContent":["import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/index'\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\n\n\nconst middleware = [thunk];\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: [\n      'gameReducer'\n    ],\n    blacklist: [\n        'userHome',\n        'joinRoom',\n        'signup',\n        'landing'\n    ]\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(\n    persistedReducer, \n    compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n)\n\n//Middleware: Redux Persist Persiter\nlet persistor = persistStore(store)\n\n\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nexport {\n    store,\n    persistor\n}\n"]},"metadata":{},"sourceType":"module"}