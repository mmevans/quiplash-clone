{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport PlayerContainer from './PlayerContainer';\nimport io from 'socket.io-client';\nimport { Button } from 'semantic-ui-react';\nimport { setRoom } from '../../actions/joinRoomActions';\nimport { getQuestions, addPlayer, removePlayer, removeAllPlayers, startGame } from '../../actions/gameActions';\nimport $ from 'jquery';\nlet socket;\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const roomID = useSelector(state => state.userHome.room_id);\n  const ENDPOINT = 'localhost:3000';\n  const createdLobby = useSelector(state => state.userHome.goToLobby);\n  var questions = useSelector(state => state.game.questions);\n  var players = useSelector(state => state.game.players);\n  const gameStarted = useSelector(state => state.game.gameStarted);\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n\n    if (createdLobby === true) {\n      dispatch(setRoom(roomID));\n      dispatch(getQuestions());\n    }\n\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('addPlayer', player => {\n      dispatch(addPlayer(player));\n    });\n  });\n\n  if (gameStarted === true) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"The game will start now!\")), React.createElement(Button, {\n      onClick: () => dispatch(startGame()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"End Game!\"));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Main Lobby\"), React.createElement(\"div\", {\n      className: \"main-lobby-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => dispatch(removeAllPlayers()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Clear Lobby\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Users currently in the lobby Max 8\"), React.createElement(PlayerContainer, {\n      players: players,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => dispatch(startGame()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Start Game\")));\n  }\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","PlayerContainer","io","Button","setRoom","getQuestions","addPlayer","removePlayer","removeAllPlayers","startGame","$","socket","MainLobby","props","dispatch","roomID","state","userHome","room_id","ENDPOINT","createdLobby","goToLobby","questions","game","players","gameStarted","parse","location","search","name","room","emit","off","on","player"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAAQC,OAAR,QAAsB,+BAAtB;AACA,SAAQC,YAAR,EAAsBC,SAAtB,EAAiCC,YAAjC,EAA+CC,gBAA/C,EAAiEC,SAAjE,QAAiF,2BAAjF;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,IAAIC,MAAJ;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,MAAM,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,OAAzB,CAA1B;AACA,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAMC,YAAY,GAAGrB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeI,SAAzB,CAAhC;AACA,MAAIC,SAAS,GAAGvB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACO,IAAN,CAAWD,SAArB,CAA3B;AACA,MAAIE,OAAO,GAAGzB,WAAW,CAAEiB,KAAK,IAAIA,KAAK,CAACO,IAAN,CAAWC,OAAtB,CAAzB;AACA,QAAMC,WAAW,GAAG1B,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACO,IAAN,CAAWE,WAArB,CAA/B;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACSG,WAAW,CAAC0B,KAAZ,CAAkBb,KAAK,CAACc,QAAN,CAAeC,MAAjC,CADT;AAAA,UACLC,IADK,sBACLA,IADK;AAAA,UACCC,IADD,sBACCA,IADD;;AAEZnB,IAAAA,MAAM,GAAGT,EAAE,CAACiB,QAAD,CAAX;;AAEA,QAAGC,YAAY,KAAK,IAApB,EAA0B;AACtBN,MAAAA,QAAQ,CAACV,OAAO,CAACW,MAAD,CAAR,CAAR;AACAD,MAAAA,QAAQ,CAACT,YAAY,EAAb,CAAR;AACH;;AACDM,IAAAA,MAAM,CAACoB,IAAP,CAAY,MAAZ,EAAqB;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAArB,EAAmC,MAAM,CACxC,CADD;AAEA,WAAM,MAAM;AACRnB,MAAAA,MAAM,CAACoB,IAAP,CAAY,YAAZ;AACApB,MAAAA,MAAM,CAACqB,GAAP;AACH,KAHD;AAIH,GAdQ,EAcN,CAACb,QAAD,CAdM,CAAT;AAiBAtB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,MAAM,CAACsB,EAAP,CAAU,WAAV,EAAwBC,MAAD,IAAY;AAC/BpB,MAAAA,QAAQ,CAACR,SAAS,CAAC4B,MAAD,CAAV,CAAR;AACH,KAFD;AAGH,GAJQ,CAAT;;AAQA,MAAGT,WAAW,KAAK,IAAnB,EAAyB;AACrB,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA7B,CADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMX,QAAQ,CAACL,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ;AAMH,GAPD,MAOO;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAKK,QAAQ,CAACN,gBAAgB,EAAjB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,EAGI,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAEgB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMV,QAAQ,CAACL,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CAFJ,CADJ;AAUE;AACL,CArDM;AAuDP,eAAeG,SAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport PlayerContainer from './PlayerContainer'\nimport io from 'socket.io-client';\nimport { Button } from 'semantic-ui-react'\nimport {setRoom} from '../../actions/joinRoomActions'\nimport {getQuestions, addPlayer, removePlayer, removeAllPlayers, startGame} from '../../actions/gameActions'\nimport $ from 'jquery';\nlet socket;\n\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const roomID = useSelector(state => state.userHome.room_id)\n    const ENDPOINT = 'localhost:3000'\n    const createdLobby = useSelector(state => state.userHome.goToLobby)\n    var questions = useSelector(state => state.game.questions)\n    var players = useSelector((state => state.game.players))\n    const gameStarted = useSelector(state => state.game.gameStarted)\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT);\n\n        if(createdLobby === true) {\n            dispatch(setRoom(roomID))\n            dispatch(getQuestions())\n        } \n        socket.emit('join',  {name, room}, () => {\n        });\n        return() => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT])\n\n\n    useEffect(() => {\n        socket.on('addPlayer', (player) => {\n            dispatch(addPlayer(player))\n        })\n    })\n\n\n\n    if(gameStarted === true) {\n        return (\n            <div>\n                <div className='game-screen'><h1>The game will start now!</h1></div>\n                <Button onClick={() => dispatch(startGame())}>End Game!</Button>\n            </div>\n        )\n    } else {\n    return (\n        <div>\n            <h1>Main Lobby</h1>\n            <div className='main-lobby-screen'>\n                <button onClick={()=> dispatch(removeAllPlayers())}>Clear Lobby</button>\n                <p> Users currently in the lobby Max 8</p>\n                <PlayerContainer players={players}/>\n                <Button onClick={() => dispatch(startGame())}>Start Game</Button>\n            </div>\n        </div>\n    )}\n}\n\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}