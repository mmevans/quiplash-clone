{"ast":null,"code":"import { FETCH_COLLECTION, ADD_PLAYER, GET_PLAYERS } from './types';\nexport const getQuestions = () => dispatch => {\n  fetch('http://localhost:3000/collectioncards').then(res => res.json()).then(collection => {\n    var title = collection[0].name;\n    var questions = [];\n    collection.map(index => questions.push(index.prompt));\n    dispatch({\n      type: FETCH_COLLECTION,\n      title,\n      questions\n    });\n  });\n};\nexport const addPlayer = (name, room) => async dispatch => {\n  const player = {\n    name,\n    room\n  };\n  const url = 'http://localhost:3000/players-in-game';\n  const settings = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(player)\n  };\n  fetch();\n  var res = await fetch(url, settings);\n  console.log('fetch', res);\n  var newplayer = await res.json();\n  console.log('does this run');\n  console.log(newplayer);\n  dispatch({\n    type: ADD_PLAYER,\n    newplayer\n  });\n};\nexport const getPlayersInRoom = room_id => async dispatch => {\n  const url = \"http://localhost:3000/players-in-room/\".concat(room_id);\n  var res = await fetch(url);\n  var players = await res.json();\n  dispatch({\n    type: GET_PLAYERS,\n    payload: players\n  });\n};","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/actions/gameActions.js"],"names":["FETCH_COLLECTION","ADD_PLAYER","GET_PLAYERS","getQuestions","dispatch","fetch","then","res","json","collection","title","name","questions","map","index","push","prompt","type","addPlayer","room","player","url","settings","method","headers","body","JSON","stringify","console","log","newplayer","getPlayersInRoom","room_id","players","payload"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,UAA1B,EAAsCC,WAAtC,QAAyD,SAAzD;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AAC1CC,EAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,UAAD,IAAgB;AAClB,QAAIC,KAAK,GAAGD,UAAU,CAAC,CAAD,CAAV,CAAcE,IAA1B;AACA,QAAIC,SAAS,GAAG,EAAhB;AAEAH,IAAAA,UAAU,CAACI,GAAX,CAAgBC,KAAD,IACXF,SAAS,CAACG,IAAV,CAAeD,KAAK,CAACE,MAArB,CADJ;AAIAZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAEjB,gBADD;AAELU,MAAAA,KAFK;AAGLE,MAAAA;AAHK,KAAD,CAAR;AAKH,GAfD;AAiBH,CAlBM;AAmBP,OAAO,MAAMM,SAAS,GAAI,CAACP,IAAD,EAAOQ,IAAP,KAAgB,MAAMf,QAAN,IAAkB;AACpD,QAAMgB,MAAM,GAAG;AAACT,IAAAA,IAAD;AAAOQ,IAAAA;AAAP,GAAf;AACA,QAAME,GAAG,GAAG,uCAAZ;AACA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFI;AAKbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AALO,GAAjB;AAOAf,EAAAA,KAAK;AACL,MAAIE,GAAG,GAAG,MAAMF,KAAK,CAACgB,GAAD,EAAMC,QAAN,CAArB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBtB,GAArB;AACA,MAAIuB,SAAS,GAAG,MAAMvB,GAAG,CAACC,IAAJ,EAAtB;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA1B,EAAAA,QAAQ,CAAC;AACLa,IAAAA,IAAI,EAAEhB,UADD;AAEL6B,IAAAA;AAFK,GAAD,CAAR;AAMC,CAtBF;AAwBP,OAAO,MAAMC,gBAAgB,GAAIC,OAAD,IAAa,MAAM5B,QAAN,IAAkB;AAE3D,QAAMiB,GAAG,mDAA4CW,OAA5C,CAAT;AAGA,MAAIzB,GAAG,GAAG,MAAMF,KAAK,CAACgB,GAAD,CAArB;AACA,MAAIY,OAAO,GAAG,MAAM1B,GAAG,CAACC,IAAJ,EAApB;AAEAJ,EAAAA,QAAQ,CAAC;AACLa,IAAAA,IAAI,EAAEf,WADD;AAELgC,IAAAA,OAAO,EAAED;AAFJ,GAAD,CAAR;AAIH,CAZM","sourcesContent":["import {FETCH_COLLECTION, ADD_PLAYER, GET_PLAYERS,} from './types'\n\n\n\nexport const getQuestions = () => dispatch => {\n    fetch('http://localhost:3000/collectioncards')\n    .then(res => res.json())\n    .then((collection) => {\n        var title = collection[0].name\n        var questions = [];\n\n        collection.map((index) => (\n            questions.push(index.prompt)\n        ))\n        \n        dispatch({\n            type: FETCH_COLLECTION,\n            title,\n            questions\n        })\n    } \n    )\n}\nexport const addPlayer =  (name, room) => async dispatch => {\n        const player = {name, room}\n        const url = 'http://localhost:3000/players-in-game';\n        const settings = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(player)\n        }\n        fetch()\n        var res = await fetch(url, settings)\n        console.log('fetch', res)\n        var newplayer = await res.json();\n        console.log('does this run')\n        console.log(newplayer)\n        dispatch({\n            type: ADD_PLAYER,\n            newplayer\n        })\n\n\n        }\n\nexport const getPlayersInRoom = (room_id) => async dispatch => {\n\n    const url = `http://localhost:3000/players-in-room/${room_id}`\n    \n    \n    var res = await fetch(url)\n    var players = await res.json();\n\n    dispatch({\n        type: GET_PLAYERS,\n        payload: players\n    })\n}"]},"metadata":{},"sourceType":"module"}