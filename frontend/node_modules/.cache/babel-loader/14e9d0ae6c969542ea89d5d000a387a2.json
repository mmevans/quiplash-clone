{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css';\nimport { setStage, updateAnswersForVoting, addPoints } from '../../actions/gameActions';\nimport { setIsActive, setSeconds } from '../../actions/timerActions';\nimport { countOfAnswers } from '../../actions/playerActions';\nimport Timer from '../Timer/Timer';\nconst ENDPOINT = 'localhost:3000';\nlet socket = io(ENDPOINT);\nlet callback;\nexport const Game = props => {\n  const dispatch = useDispatch();\n  const stage = useSelector(state => state.game.stage);\n  const isActive = useSelector(state => state.timer.isActive);\n  const seconds = useSelector(state => state.timer.seconds);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n  const count_of_answers = useSelector(state => state.player.count_of_answers);\n  const questions_round_1 = useSelector(state => state.game.questions_round_1);\n  const selectedQuestion = useSelector(state => state.game.selectedQuestion);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(setStage());\n      dispatch(setIsActive());\n      dispatch(setSeconds(80)); // give all the players their prompts to answer on screen\n    }, 5000);\n    socket.on('ready-to-vote', ({\n      allPlayersInGame,\n      selectedQuestion\n    }) => {\n      dispatch(setIsActive());\n      dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion));\n      dispatch(setStage());\n    });\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    if (callback) socket.off(callback);\n\n    callback = answer => {\n      console.log('is this running for host?');\n      console.log('answer sent ', answer);\n\n      if (count_of_answers <= playersInRoom.length) {\n        dispatch(countOfAnswers());\n\n        if (answer === questions_round_1[0].answers[0]) {\n          dispatch(addPoints(count_of_answers, 0));\n        }\n\n        if (answer === questions_round_1[1]) {\n          dispatch(addPoints(count_of_answers, 1));\n        }\n      }\n    };\n\n    console.log('questions_round_1', questions_round_1);\n    if (questions_round_1) socket.on('cast-vote-round-1-to-host', callback);\n  }, [count_of_answers, dispatch, questions_round_1]);\n  useEffect(() => {\n    if (count_of_answers === playersInRoom.length) {}\n  });\n\n  if (stage === 1) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Here are the Rules\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Each player will be given a prompt to answer. When everyone is done answering, \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" You will vote on your favorite answers!\"));\n  }\n\n  if (stage === 2) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n  if (stage === 3) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, questions_round_1[selectedQuestion].prompt), questions_round_1[selectedQuestion].answers.map(answer => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, answer))));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"game-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Timer: \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Question:\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"The Game\"));\n};\nexport default Game;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js"],"names":["React","useState","useEffect","useDispatch","useSelector","io","setStage","updateAnswersForVoting","addPoints","setIsActive","setSeconds","countOfAnswers","Timer","ENDPOINT","socket","callback","Game","props","dispatch","stage","state","game","isActive","timer","seconds","playersInRoom","count_of_answers","player","questions_round_1","selectedQuestion","setTimeout","on","allPlayersInGame","clearTimeout","off","answer","console","log","length","answers","prompt","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,sBAAnB,EAA2CC,SAA3C,QAA4D,2BAA5D;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,4BAAxC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,IAAIC,MAAM,GAAGT,EAAE,CAACQ,QAAD,CAAf;AAEA,IAAIE,QAAJ;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,KAAK,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB;AACA,QAAMG,QAAQ,GAAGlB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,KAAN,CAAYD,QAAtB,CAA5B;AACA,QAAME,OAAO,GAAGpB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACG,KAAN,CAAYC,OAAtB,CAA3B;AACA,QAAMC,aAAa,GAAGrB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWI,aAArB,CAAjC;AACA,QAAMC,gBAAgB,GAAGtB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACO,MAAN,CAAaD,gBAAvB,CAApC;AACA,QAAME,iBAAiB,GAAGxB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWO,iBAArB,CAArC;AACA,QAAMC,gBAAgB,GAAGzB,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWQ,gBAArB,CAApC;AAGA3B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,KAAK,GAAGO,UAAU,CAAC,MAAM;AAC3BZ,MAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AACAY,MAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACAS,MAAAA,QAAQ,CAACR,UAAU,CAAC,EAAD,CAAX,CAAR,CAH2B,CAI3B;AACH,KALuB,EAKrB,IALqB,CAAxB;AAMAI,IAAAA,MAAM,CAACiB,EAAP,CAAU,eAAV,EAA2B,CAAC;AAAEC,MAAAA,gBAAF;AAAoBH,MAAAA;AAApB,KAAD,KAA4C;AACnEX,MAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACAS,MAAAA,QAAQ,CAACX,sBAAsB,CAACyB,gBAAD,EAAmBH,gBAAnB,CAAvB,CAAR;AACAX,MAAAA,QAAQ,CAACZ,QAAQ,EAAT,CAAR;AACH,KAJD;AAKA,WAAO,MAAM2B,YAAY,CAACV,KAAD,CAAzB;AACH,GAbQ,EAaN,EAbM,CAAT;AAeArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,QAAH,EAAaD,MAAM,CAACoB,GAAP,CAAWnB,QAAX;;AACbA,IAAAA,QAAQ,GAAIoB,MAAD,IAAY;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAA5B;;AACA,UAAIT,gBAAgB,IAAID,aAAa,CAACa,MAAtC,EAA8C;AAC1CpB,QAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;;AACA,YAAIwB,MAAM,KAAKP,iBAAiB,CAAC,CAAD,CAAjB,CAAqBW,OAArB,CAA6B,CAA7B,CAAf,EAAgD;AAC5CrB,UAAAA,QAAQ,CAACV,SAAS,CAACkB,gBAAD,EAAmB,CAAnB,CAAV,CAAR;AACH;;AACD,YAAIS,MAAM,KAAKP,iBAAiB,CAAC,CAAD,CAAhC,EAAqC;AACjCV,UAAAA,QAAQ,CAACV,SAAS,CAACkB,gBAAD,EAAmB,CAAnB,CAAV,CAAR;AACH;AACJ;AACJ,KAZD;;AAaAU,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCT,iBAAjC;AACA,QAAGA,iBAAH,EAAsBd,MAAM,CAACiB,EAAP,CAAU,2BAAV,EAAuChB,QAAvC;AACzB,GAjBQ,EAiBN,CAACW,gBAAD,EAAmBR,QAAnB,EAA6BU,iBAA7B,CAjBM,CAAT;AAmBA1B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,gBAAgB,KAAKD,aAAa,CAACa,MAAvC,EAA+C,CAE9C;AACJ,GAJQ,CAAT;;AAOA,MAAInB,KAAK,KAAK,CAAd,EAAiB;AACb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHJ,CADJ;AAOH;;AACD,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AACD,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,iBAAiB,CAACC,gBAAD,CAAjB,CAAoCW,MADzC,CADJ,EAIKZ,iBAAiB,CAACC,gBAAD,CAAjB,CAAoCU,OAApC,CAA4CE,GAA5C,CAAgDN,MAAM,IACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAL,CADJ,CADH,CAJL,CADJ;AAYH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ;AAQH,CA1FM;AA4FP,eAAenB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css'\nimport { setStage, updateAnswersForVoting, addPoints } from '../../actions/gameActions'\nimport { setIsActive, setSeconds } from '../../actions/timerActions'\nimport { countOfAnswers } from '../../actions/playerActions'\nimport Timer from '../Timer/Timer'\n\nconst ENDPOINT = 'localhost:3000'\nlet socket = io(ENDPOINT);\n\nlet callback;\n\nexport const Game = (props) => {\n    const dispatch = useDispatch();\n    const stage = useSelector(state => state.game.stage);\n    const isActive = useSelector(state => state.timer.isActive)\n    const seconds = useSelector(state => state.timer.seconds)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    const count_of_answers = useSelector(state => state.player.count_of_answers)\n    const questions_round_1 = useSelector(state => state.game.questions_round_1)\n    const selectedQuestion = useSelector(state => state.game.selectedQuestion)\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            dispatch(setStage())\n            dispatch(setIsActive())\n            dispatch(setSeconds(80))\n            // give all the players their prompts to answer on screen\n        }, 5000);\n        socket.on('ready-to-vote', ({ allPlayersInGame, selectedQuestion }) => {\n            dispatch(setIsActive())\n            dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion))\n            dispatch(setStage())\n        })\n        return () => clearTimeout(timer);\n    }, []);\n\n    useEffect(() => {\n        if(callback) socket.off(callback)\n        callback = (answer) => {\n            console.log('is this running for host?')\n            console.log('answer sent ', answer)\n            if (count_of_answers <= playersInRoom.length) {\n                dispatch(countOfAnswers())\n                if (answer === questions_round_1[0].answers[0]) {\n                    dispatch(addPoints(count_of_answers, 0))\n                }\n                if (answer === questions_round_1[1]) {\n                    dispatch(addPoints(count_of_answers, 1))\n                }\n            }\n        }\n        console.log('questions_round_1', questions_round_1)\n        if(questions_round_1) socket.on('cast-vote-round-1-to-host', callback)\n    }, [count_of_answers, dispatch, questions_round_1])\n\n    useEffect(() => {\n        if (count_of_answers === playersInRoom.length) {\n\n        }\n    })\n\n\n    if (stage === 1) {\n        return (\n            <div>\n                <p>Here are the Rules</p>\n                <p> Each player will be given a prompt to answer. When everyone is done answering, </p>\n                <p> You will vote on your favorite answers!</p>\n            </div>\n        )\n    }\n    if (stage === 2) {\n        return (\n            <div>\n                <Timer />\n            </div>\n        )\n    }\n    if (stage === 3) {\n        return (\n            <div>\n                <div>\n                    {questions_round_1[selectedQuestion].prompt}\n                </div>\n                {questions_round_1[selectedQuestion].answers.map(answer => (\n                    <div>\n                        <h1>{answer}</h1>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n    return (\n        <div className='game-container'>\n            <div><p>Timer: </p></div>\n\n            <div><p>Question:</p></div>\n            <h1>The Game</h1>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}