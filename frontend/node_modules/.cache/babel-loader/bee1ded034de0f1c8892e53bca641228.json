{"ast":null,"code":"import _defineProperty from \"/Users/mmevansjr/dev/mod5/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_PLAYER, GET_PLAYERS, SET_STAGE } from \"../actions/types\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nconst initialState = {\n  playerNames: [],\n  playersInRoom: [],\n  stage: 1\n};\n\nfunction gameReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_PLAYERS:\n      return _objectSpread({}, state, {\n        playerNames: action.playerNames,\n        playersInRoom: action.players\n      });\n\n    case SET_STAGE:\n      return _objectSpread({}, state, {\n        stage: state.stage + 1\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}\n\nexport default gameReducer;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/reducers/gameReducer.js"],"names":["ADD_PLAYER","GET_PLAYERS","SET_STAGE","storage","persistReducer","initialState","playerNames","playersInRoom","stage","gameReducer","state","action","type","players"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,kBAAlD;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,aAAa,EAAE,EAFE;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAMA,SAASC,WAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,WAAW,EAAEK,MAAM,CAACL,WAFtB;AAGEC,QAAAA,aAAa,EAAEI,MAAM,CAACE;AAHxB;;AAKF,SAAKX,SAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFvB;;AAIF;AACE,+BACKE,KADL;AAbN;AAiBH;;AAED,eAAeD,WAAf","sourcesContent":["import {ADD_PLAYER, GET_PLAYERS, SET_STAGE } from \"../actions/types\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst initialState = {\n    playerNames: [],\n    playersInRoom: [],\n    stage: 1\n}\n\nfunction gameReducer (state = initialState, action) {\n    switch(action.type) {\n        case GET_PLAYERS:\n          return {\n            ...state,\n            playerNames: action.playerNames,\n            playersInRoom: action.players\n          }\n        case SET_STAGE:\n          return {\n            ...state,\n            stage: state.stage + 1\n          }\n        default:\n          return {\n            ...state\n          }\n    }\n}\n\nexport default gameReducer"]},"metadata":{},"sourceType":"module"}