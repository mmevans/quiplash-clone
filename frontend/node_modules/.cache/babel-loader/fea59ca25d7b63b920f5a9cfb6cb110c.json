{"ast":null,"code":"import _defineProperty from \"/Users/mmevansjr/dev/mod5/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_COLLECTION, SET_MESSAGES } from \"../actions/types\";\nconst initialState = {\n  deckName: '',\n  prompts: {},\n  message: '',\n  messages: []\n};\nexport default function gameReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_COLLECTION:\n      return _objectSpread({}, state, {\n        prompts: action.prompts,\n        deckName: action.deckName\n      });\n\n    case SET_MESSAGES:\n      return _objectSpread({}, state, {\n        messages: [...state.messages, action.message]\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/reducers/gameReducer.js"],"names":["FETCH_COLLECTION","SET_MESSAGES","initialState","deckName","prompts","message","messages","gameReducer","state","action","type"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,YAA3B,QAA+C,kBAA/C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;AAOA,eAAe,SAASC,WAAT,CAAsBC,KAAK,GAAGN,YAA9B,EAA4CO,MAA5C,EAAoD;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,gBAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,OAAO,EAAEK,MAAM,CAACL,OAFlB;AAGED,QAAAA,QAAQ,EAAEM,MAAM,CAACN;AAHnB;;AAMF,SAAKF,YAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACJ,OAA3B;AAFZ;;AAIF;AACE,+BACKG,KADL;AAdN;AAkBH","sourcesContent":["import { FETCH_COLLECTION, SET_MESSAGES } from \"../actions/types\";\n\nconst initialState = {\n    deckName: '',\n    prompts: {},\n    message: '',\n    messages: [],\n}\n\nexport default function gameReducer (state = initialState, action) {\n    switch(action.type) {\n        case FETCH_COLLECTION: \n          return {\n            ...state,\n            prompts: action.prompts,\n            deckName: action.deckName\n\n          }\n        case SET_MESSAGES:\n          return {\n            ...state,\n            messages: [...state.messages, action.message]\n          }\n        default:\n          return {\n            ...state\n          }\n    }\n}"]},"metadata":{},"sourceType":"module"}