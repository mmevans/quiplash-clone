{"ast":null,"code":"import { FETCH_COLLECTION, ADD_PLAYER, GET_PLAYERS } from './types';\nexport const getQuestions = () => dispatch => {\n  fetch('http://localhost:3000/collectioncards').then(res => res.json()).then(collection => {\n    var title = collection[0].name;\n    var questions = [];\n    collection.map(index => questions.push(index.prompt));\n    dispatch({\n      type: FETCH_COLLECTION,\n      title,\n      questions\n    });\n  });\n};\nexport const addPlayer = (name, room) => dispatch => {\n  const player = {\n    name,\n    room\n  };\n  fetch('http://localhost:3000/players-in-game', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(player)\n  }).then(res => res.json()).then(newplayer => dispatch({\n    type: ADD_PLAYER,\n    newplayer\n  }));\n};\nexport const getPlayers = room_id => dispatch => {\n  fetch(\"http://localhost:3000/players-in-room/\".concat(room_id)).then(res => res.json()).then(players => dispatch({\n    type: GET_PLAYERS,\n    payload: players\n  }));\n};","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/actions/gameActions.js"],"names":["FETCH_COLLECTION","ADD_PLAYER","GET_PLAYERS","getQuestions","dispatch","fetch","then","res","json","collection","title","name","questions","map","index","push","prompt","type","addPlayer","room","player","method","headers","body","JSON","stringify","newplayer","getPlayers","room_id","players","payload"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,UAA1B,EAAsCC,WAAtC,QAAyD,SAAzD;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AAC1CC,EAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,UAAD,IAAgB;AAClB,QAAIC,KAAK,GAAGD,UAAU,CAAC,CAAD,CAAV,CAAcE,IAA1B;AACA,QAAIC,SAAS,GAAG,EAAhB;AAEAH,IAAAA,UAAU,CAACI,GAAX,CAAgBC,KAAD,IACXF,SAAS,CAACG,IAAV,CAAeD,KAAK,CAACE,MAArB,CADJ;AAIAZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAEjB,gBADD;AAELU,MAAAA,KAFK;AAGLE,MAAAA;AAHK,KAAD,CAAR;AAKH,GAfD;AAiBH,CAlBM;AAmBP,OAAO,MAAMM,SAAS,GAAG,CAACP,IAAD,EAAOQ,IAAP,KAAgBf,QAAQ,IAAI;AAC7C,QAAMgB,MAAM,GAAG;AAACT,IAAAA,IAAD;AAAOQ,IAAAA;AAAP,GAAf;AACAd,EAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC/CgB,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFsC;AAK/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALyC,GAA1C,CAAL,CAOCd,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMoB,SAAS,IAAItB,QAAQ,CAAC;AACxBa,IAAAA,IAAI,EAAEhB,UADkB;AAExByB,IAAAA;AAFwB,GAAD,CAR3B;AAYP,CAdM;AAgBP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAaxB,QAAQ,IAAI;AAC/CC,EAAAA,KAAK,iDAA0CuB,OAA1C,EAAL,CACCtB,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMuB,OAAO,IAAIzB,QAAQ,CAAC;AACtBa,IAAAA,IAAI,EAAEf,WADgB;AAEtB4B,IAAAA,OAAO,EAAED;AAFa,GAAD,CAFzB;AAMH,CAPM","sourcesContent":["import {FETCH_COLLECTION, ADD_PLAYER, GET_PLAYERS,} from './types'\n\n\n\nexport const getQuestions = () => dispatch => {\n    fetch('http://localhost:3000/collectioncards')\n    .then(res => res.json())\n    .then((collection) => {\n        var title = collection[0].name\n        var questions = [];\n\n        collection.map((index) => (\n            questions.push(index.prompt)\n        ))\n        \n        dispatch({\n            type: FETCH_COLLECTION,\n            title,\n            questions\n        })\n    } \n    )\n}\nexport const addPlayer = (name, room) => dispatch => {\n        const player = {name, room}\n        fetch('http://localhost:3000/players-in-game', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(player)\n        })\n        .then(res => res.json())\n        .then(newplayer => dispatch({\n            type: ADD_PLAYER,\n            newplayer\n        }))\n}\n\nexport const getPlayers = (room_id) => dispatch => {\n    fetch(`http://localhost:3000/players-in-room/${room_id}`)\n    .then(res => res.json())\n    .then(players => dispatch({\n        type: GET_PLAYERS,\n        payload: players\n    }))\n}"]},"metadata":{},"sourceType":"module"}