{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { addPlayer, getPlayersInRoom } from '../../actions/gameActions';\nlet socket;\nconst ENDPOINT = 'localhost:3000';\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const playerNames = useSelector(state => state.game.playerNames);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n\n    if (!playerNames.includes(name)) {\n      socket.emit('join', {\n        name,\n        room\n      }, () => {\n        dispatch(addPlayer(name, room));\n      });\n    }\n  });\n  useEffect(() => {\n    const _queryString$parse2 = queryString.parse(props.location.search),\n          name = _queryString$parse2.name,\n          room = _queryString$parse2.room;\n\n    dispatch(getPlayersInRoom(room));\n  }, [playerNames]);\n  console.log('playerNames', playerNames);\n  console.log('players', playersInRoom);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main-lobby-screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Users currently in the lobby Max 8\")));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","io","addPlayer","getPlayersInRoom","socket","ENDPOINT","MainLobby","props","dispatch","playerNames","state","game","playersInRoom","parse","location","search","name","room","includes","emit","console","log"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,QAA0C,2BAA1C;AAEA,IAAIC,MAAJ;AACA,MAAMC,QAAQ,GAAG,gBAAjB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,WAAW,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,WAArB,CAA/B;AACA,QAAMG,aAAa,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,aAArB,CAAjC;AACAf,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACSG,WAAW,CAACa,KAAZ,CAAkBN,KAAK,CAACO,QAAN,CAAeC,MAAjC,CADT;AAAA,UACLC,IADK,sBACLA,IADK;AAAA,UACCC,IADD,sBACCA,IADD;;AAGZb,IAAAA,MAAM,GAAGH,EAAE,CAACI,QAAD,CAAX;;AACA,QAAG,CAACI,WAAW,CAACS,QAAZ,CAAqBF,IAArB,CAAJ,EAAgC;AAC5BZ,MAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAACH,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAApB,EAAkC,MAAM;AACpCT,QAAAA,QAAQ,CAACN,SAAS,CAACc,IAAD,EAAOC,IAAP,CAAV,CAAR;AACH,OAFD;AAGP;AACA,GATQ,CAAT;AAWApB,EAAAA,SAAS,CAAC,MAAM;AAAA,gCACSG,WAAW,CAACa,KAAZ,CAAkBN,KAAK,CAACO,QAAN,CAAeC,MAAjC,CADT;AAAA,UACLC,IADK,uBACLA,IADK;AAAA,UACCC,IADD,uBACCA,IADD;;AAEZT,IAAAA,QAAQ,CAACL,gBAAgB,CAACc,IAAD,CAAjB,CAAR;AACH,GAHQ,EAGN,CAACR,WAAD,CAHM,CAAT;AAKDW,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BZ,WAA3B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,aAAvB;AACC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,CADJ,CADJ;AAOC,CA7BE;AA8BP,eAAeN,SAAf","sourcesContent":["\nimport React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport {addPlayer, getPlayersInRoom} from '../../actions/gameActions'\n\nlet socket;\nconst ENDPOINT = 'localhost:3000'\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const playerNames = useSelector(state => state.game.playerNames)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n\n        socket = io(ENDPOINT);\n        if(!playerNames.includes(name)) {\n            socket.emit('join', {name, room}, () => {\n                dispatch(addPlayer(name, room))\n            })\n    }\n    })\n\n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        dispatch(getPlayersInRoom(room))\n    }, [playerNames])\n    \n   console.log('playerNames', playerNames)\n   console.log('players', playersInRoom)\n    return (\n        <div>\n            <div className='main-lobby-screen'>\n                <p> Users currently in the lobby Max 8</p>\n            </div>\n        </div>\n    )\n    }\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}