{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css';\nimport { setStage, updateAnswersForVoting } from '../../actions/gameActions';\nimport { setIsActive, setSeconds } from '../../actions/timerActions';\nimport Timer from '../Timer/Timer';\nconst ENDPOINT = 'localhost:3000';\nlet socket = io(ENDPOINT);\nexport const Game = props => {\n  const dispatch = useDispatch();\n  const stage = useSelector(state => state.game.stage);\n  const isActive = useSelector(state => state.timer.isActive);\n  const seconds = useSelector(state => state.timer.seconds);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n  const allQuestions = useSelector(state => state.game.questions);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(setStage());\n      dispatch(setIsActive());\n      dispatch(setSeconds(80)); // give all the players their prompts to answer on screen\n    }, 5000);\n    socket.on('someshit', allPlayersInGame => {\n      console.log('questions', allQuestions);\n      console.log(allPlayersInGame);\n      dispatch(setIsActive());\n      dispatch(updateAnswersForVoting(allPlayersInGame, allQuestions));\n      socket.emit('ready-to-vote', () => {});\n    });\n    return () => clearTimeout(timer);\n  }, []); //   useEffect(() => {\n  //       if(seconds === 0) {\n  //         dispatch(setIsActive())\n  //       }\n  //   })\n\n  if (stage === 1) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Here are the Rules\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Each player will be given a prompt to answer. When everyone is done answering, \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" You will vote on your favorite answers!\"));\n  }\n\n  if (stage === 2) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n  if (stage === 3) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"game-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Timer: \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Question:\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"The Game\"));\n};\nexport default Game;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js"],"names":["React","useState","useEffect","useDispatch","useSelector","io","setStage","updateAnswersForVoting","setIsActive","setSeconds","Timer","ENDPOINT","socket","Game","props","dispatch","stage","state","game","isActive","timer","seconds","playersInRoom","allQuestions","questions","setTimeout","on","allPlayersInGame","console","log","emit","clearTimeout"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css'\nimport {setStage, updateAnswersForVoting} from '../../actions/gameActions'\nimport {setIsActive, setSeconds} from '../../actions/timerActions'\nimport Timer from '../Timer/Timer'\n\nconst ENDPOINT = 'localhost:3000'\nlet socket = io(ENDPOINT);\n\n\n\nexport const Game = (props) => {\n    const dispatch = useDispatch();\n    const stage = useSelector(state => state.game.stage);\n    const isActive = useSelector(state => state.timer.isActive)\n    const seconds = useSelector(state => state.timer.seconds)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    const allQuestions = useSelector(state => state.game.questions)\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n          dispatch(setStage())\n          dispatch(setIsActive())\n          dispatch(setSeconds(80))\n          // give all the players their prompts to answer on screen\n        }, 5000);\n\n        socket.on('someshit', (allPlayersInGame) => {\n            console.log('questions',allQuestions)\n            console.log(allPlayersInGame)\n            dispatch(setIsActive())\n            dispatch(updateAnswersForVoting(allPlayersInGame, allQuestions))\n            socket.emit('ready-to-vote', () => {})\n        })\n\n        return () => clearTimeout(timer);\n      }, []);\n\n    //   useEffect(() => {\n    //       if(seconds === 0) {\n    //         dispatch(setIsActive())\n\n    //       }\n    //   })\n\n    \n\n    if(stage === 1) {\n        return (\n        <div>\n            <p>Here are the Rules</p>\n            <p> Each player will be given a prompt to answer. When everyone is done answering, </p>\n            <p> You will vote on your favorite answers!</p>\n        </div>\n        )\n    }\n    if(stage === 2) {\n        return (\n            <div>\n                <Timer/>\n            </div>\n        )\n    }\n    if(stage === 3) {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n    return (\n        <div className='game-container'>\n            <div><p>Timer: </p></div>\n\n            <div><p>Question:</p></div>\n            <h1>The Game</h1>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}