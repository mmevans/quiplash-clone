{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { setName, setRoom } from '../../actions/joinRoomActions';\nimport { getStandardDeck, setMessages } from '../../actions/gameActions';\nlet socket;\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const roomId = useSelector(state => state.joinRoom.room_id);\n  const username = useSelector(state => state.joinRoom.name);\n  const deck = useSelector(state => state.game.prompts);\n  const deckName = useSelector(state => state.game.deckName);\n  const allMessages = useSelector(state => state.game.messages);\n  const message = useSelector(state => state.game.message);\n  const ENDPOINT = 'localhost:3000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    dispatch(setName(name));\n    dispatch(setRoom(room));\n    dispatch(getStandardDeck());\n    socket.emit('join', (name, room));\n    return () => {\n      socket.emit('disconnect');\n      console.log('unmount');\n    };\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('message', () => {\n      setMessages(message);\n    });\n  }, [allMessages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessages(''));\n    }\n  };\n\n  console.log(message, allMessages);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Main Lobby\"), React.createElement(\"input\", {\n    value: message,\n    onChange: e => setMessages(e.target.value),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","io","setName","setRoom","getStandardDeck","setMessages","socket","MainLobby","props","dispatch","roomId","state","joinRoom","room_id","username","name","deck","game","prompts","deckName","allMessages","messages","message","ENDPOINT","parse","location","search","room","emit","console","log","on","sendMessage","event","preventDefault","e","target","value","key"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport {setName, setRoom} from '../../actions/joinRoomActions'\nimport {getStandardDeck, setMessages} from '../../actions/gameActions'\n\n\nlet socket;\n\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const roomId = useSelector(state => state.joinRoom.room_id)\n    const username = useSelector(state => state.joinRoom.name)\n    const deck = useSelector(state => state.game.prompts)\n    const deckName = useSelector(state => state.game.deckName)\n    const allMessages = useSelector(state => state.game.messages)\n    const message = useSelector(state => state.game.message)\n    const ENDPOINT = 'localhost:3000'\n\n    \n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT);\n        dispatch(setName(name))\n        dispatch(setRoom(room))\n        dispatch(getStandardDeck())\n        \n        socket.emit('join',  (name, room));\n\n        return() => {\n            socket.emit('disconnect');\n            console.log('unmount')\n        }\n    }, [ENDPOINT])\n\n    useEffect(() => {\n        socket.on('message', () => {\n            setMessages(message);\n        })\n    }, [allMessages])\n    \n    const sendMessage = (event) => {\n        event.preventDefault();\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessages(''));\n        }\n    }\n    console.log(message, allMessages)\n    return (\n        <div>\n            <h1>Main Lobby</h1>\n            <input \n            value={message} \n            onChange={(e) => setMessages(e.target.value)}\n            onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}/>\n        </div>\n    )\n}\n\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}