{"ast":null,"code":"import _defineProperty from \"/Users/mmevansjr/dev/mod5/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SIGN_UP, LOGGED_IN, LOGIN_ERROR } from '../actions/types';\nconst intialState = {\n  user: {},\n  IsLoggedIn: false,\n  error: ''\n};\nexport default function signupReducer(state = intialState, action) {\n  switch (action.type) {\n    case SIGN_UP:\n      return _objectSpread({}, state, {\n        user: action.payload,\n        IsLoggedIn: true\n      });\n\n    case LOGGED_IN:\n      return _objectSpread({}, state, {\n        user: action.payload,\n        IsLoggedIn: true\n      });\n\n    case LOGIN_ERROR:\n      return _objectSpread({}, state, {\n        error: 'email or password do not match!'\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n}","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/reducers/signupReducer.js"],"names":["SIGN_UP","LOGGED_IN","LOGIN_ERROR","intialState","user","IsLoggedIn","error","signupReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,SAAlB,EAA6BC,WAA7B,QAA+C,kBAA/C;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,UAAU,EAAE,KAFI;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAApB;AAMA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGL,WAA/B,EAA4CM,MAA5C,EAAoD;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,OAAL;AACI,+BACGQ,KADH;AAEAJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFb;AAGAN,QAAAA,UAAU,EAAE;AAHZ;;AAKJ,SAAKJ,SAAL;AACI,+BACOO,KADP;AAEIJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFjB;AAGIN,QAAAA,UAAU,EAAE;AAHhB;;AAKJ,SAAKH,WAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,KAAK,EAAE;AAFX;;AAIJ;AACI,+BACOE,KADP;AAnBR;AAuBH","sourcesContent":["import { SIGN_UP, LOGGED_IN, LOGIN_ERROR} from '../actions/types'\n\nconst intialState = {\n    user: {},\n    IsLoggedIn: false,\n    error: ''\n}\n\nexport default function signupReducer(state = intialState, action) {\n    switch(action.type) {\n        case SIGN_UP:\n            return {\n            ...state,\n            user: action.payload,\n            IsLoggedIn: true\n            }\n        case LOGGED_IN:\n            return {\n                ...state,\n                user: action.payload,\n                IsLoggedIn: true\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                error: 'email or password do not match!'\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}"]},"metadata":{},"sourceType":"module"}