{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css';\nimport './votingScreenRound1.css';\nimport '../Timer/loadingCircle.css';\nimport { setStage, updateAnswersForVoting, addPoints, determineWinner, goToNextQuestion } from '../../actions/gameActions';\nimport { setIsActive, setSeconds } from '../../actions/timerActions';\nimport { Button } from 'semantic-ui-react';\nimport Timer from '../Timer/Timer';\nimport Winner from './Winner';\nimport $ from 'jquery';\nconst ENDPOINT = 'localhost:3000';\nlet socket = io(ENDPOINT);\nexport const Game = props => {\n  const dispatch = useDispatch();\n  const stage = useSelector(state => state.game.stage);\n  const isActive = useSelector(state => state.timer.isActive);\n  const seconds = useSelector(state => state.timer.seconds);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n  const count_of_answers = useSelector(state => state.player.count_of_answers);\n  const questions_round_1 = useSelector(state => state.game.questions_round_1);\n  const selectedQuestion = useSelector(state => state.game.selectedQuestion);\n  const round_winner = useSelector(state => state.game.round_winner);\n  const round_winner_points = useSelector(state => state.game.round_winner_points);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(setStage());\n      dispatch(setIsActive());\n      dispatch(setSeconds(60)); // give all the players their prompts to answer on screen\n    }, 20000);\n    socket.on('ready-to-vote', ({\n      allPlayersInGame,\n      selectedQuestion\n    }) => {\n      dispatch(setIsActive());\n      dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion));\n      dispatch(setStage());\n    });\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    socket.on('cast-vote-round-1-to-host', (answer, callback) => {\n      dispatch(addPoints(answer));\n    });\n  }, [count_of_answers]);\n\n  const getRoundWinner = () => {\n    console.log('what about this?');\n    dispatch(determineWinner());\n  };\n\n  useEffect(() => {\n    socket.on('cast-go-to-next-question', callback => {\n      console.log('this should run for everybody!');\n      console.log(\"questions\", questions_round_1);\n      console.log(selectedQuestion);\n      dispatch(goToNextQuestion());\n    });\n  });\n\n  const goToNextRound = () => {\n    socket.emit('go-to-next-question', () => {}); // update the selected question for players\n    // show the buttons that i hide from them again\n    // set stage for user and display next prompts\n  };\n\n  console.log(round_winner);\n\n  if (stage === 1) {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"sp-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"sp-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"frame-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Each player will be given random prompts to answer each round\"), React.createElement(\"h2\", {\n      class: \"frame-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"After each round of answers, you will vote on the best answer for each prompt!\"), React.createElement(\"h2\", {\n      class: \"frame-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"You will have 60 seconds for each round! \"), React.createElement(\"h2\", {\n      class: \"frame-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Good Luck!\"))));\n  }\n\n  if (stage === 2) {\n    return React.createElement(\"div\", {\n      className: \"timer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"loading-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))));\n  }\n\n  if (stage === 3) {\n    return React.createElement(\"div\", {\n      className: \"votingScreenRound1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, questions_round_1[selectedQuestion].prompt)), React.createElement(\"h2\", {\n      className: \"answer1Round1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Answer 1\"), React.createElement(\"h2\", {\n      className: \"answer2Round1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Answer 2\"), questions_round_1[selectedQuestion].answers.map((answer, i) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"speech\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, answer))), React.createElement(Winner, {\n      winner: round_winner,\n      points: round_winner_points,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"redRound1Voting\",\n      src: \"https://jackboxgames.com/wp-content/uploads/2019/07/Red.gif\",\n      alt: \"quiplash icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: \"blueRound1Voting\",\n      src: \"https://jackboxgames.com/wp-content/uploads/2019/07/Blue.gif\",\n      alt: \"quiplash icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"getRoundWinner\",\n      size: \"medium\",\n      color: \"grey\",\n      onClick: () => getRoundWinner(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Get Winner\"), React.createElement(Button, {\n      className: \"nextRound\",\n      onClick: () => goToNextRound(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Next Round\"));\n  }\n\n  if (stage === 4) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Next round of questions go here!\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"game-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  });\n};\nexport default Game;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js"],"names":["React","useEffect","useDispatch","useSelector","io","setStage","updateAnswersForVoting","addPoints","determineWinner","goToNextQuestion","setIsActive","setSeconds","Button","Timer","Winner","$","ENDPOINT","socket","Game","props","dispatch","stage","state","game","isActive","timer","seconds","playersInRoom","count_of_answers","player","questions_round_1","selectedQuestion","round_winner","round_winner_points","setTimeout","on","allPlayersInGame","clearTimeout","answer","callback","getRoundWinner","console","log","goToNextRound","emit","prompt","answers","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css'\nimport './votingScreenRound1.css'\nimport '../Timer/loadingCircle.css'\nimport { setStage, updateAnswersForVoting, addPoints, determineWinner, goToNextQuestion } from '../../actions/gameActions'\nimport { setIsActive, setSeconds } from '../../actions/timerActions'\nimport {Button} from 'semantic-ui-react'\nimport Timer from '../Timer/Timer'\nimport Winner from './Winner'\nimport $ from 'jquery'\nconst ENDPOINT = 'localhost:3000'\nlet socket = io(ENDPOINT);\n\n\nexport const Game = (props) => {\n\n    const dispatch = useDispatch();\n    const stage = useSelector(state => state.game.stage);\n    const isActive = useSelector(state => state.timer.isActive)\n    const seconds = useSelector(state => state.timer.seconds)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    const count_of_answers = useSelector(state => state.player.count_of_answers)\n    const questions_round_1 = useSelector(state => state.game.questions_round_1)\n    const selectedQuestion = useSelector(state => state.game.selectedQuestion)\n    const round_winner = useSelector(state => state.game.round_winner)\n    const round_winner_points = useSelector(state => state.game.round_winner_points)\n\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            dispatch(setStage())\n            dispatch(setIsActive())\n            dispatch(setSeconds(60))\n            // give all the players their prompts to answer on screen\n        }, 20000);\n        socket.on('ready-to-vote', ({ allPlayersInGame, selectedQuestion }) => {\n            dispatch(setIsActive())\n            dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion))\n            dispatch(setStage())\n        })\n        return () => clearTimeout(timer);\n    }, []);\n\n    useEffect(() => {\n        socket.on('cast-vote-round-1-to-host', (answer, callback) => {\n            dispatch(addPoints(answer))\n        })\n        \n    }, [count_of_answers])\n\n    const getRoundWinner = () => {\n        console.log('what about this?')\n        dispatch(determineWinner())\n    } \n\n    useEffect(() => {\n        socket.on('cast-go-to-next-question', (callback) => {\n            console.log('this should run for everybody!')\n            console.log(\"questions\", questions_round_1)\n            console.log(selectedQuestion)\n            dispatch(goToNextQuestion())\n        })\n    })\n\n    const goToNextRound = () => {\n        socket.emit('go-to-next-question', () => {})\n        // update the selected question for players\n        // show the buttons that i hide from them again\n        // set stage for user and display next prompts\n    }\n    console.log(round_winner)\n\n    if (stage === 1) {\n        return (\n            <div className='main-container'>\n            <div class=\"sp-container\">\n                <div class=\"sp-content\">\n                    <h2 class=\"frame-1\">Each player will be given random prompts to answer each round</h2>\n                    <h2 class=\"frame-2\">After each round of answers, you will vote on the best answer for each prompt!</h2>\n                    <h2 class=\"frame-3\">You will have 60 seconds for each round! </h2>\n                    <h2 class=\"frame-4\">Good Luck!</h2>\n                </div>\n            </div>\n        </div>\n        )\n    }\n    if (stage === 2) {\n        return (\n        <div className='timer-container'>\n                <Timer />\n            <div className='loading-container'>\n                <div class=\"loader\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n                </div>\n        </div>\n        )\n    }\n    if (stage === 3) {\n        return (\n        <div className='votingScreenRound1'>\n          <div>\n            <h1>{questions_round_1[selectedQuestion].prompt}</h1> \n          </div>\n            <h2 className='answer1Round1'>Answer 1</h2>\n            <h2 className='answer2Round1'>Answer 2</h2>\n            {questions_round_1[selectedQuestion].answers.map((answer,i) => (\n                <div>\n                    <p className={`speech${i}`}>{answer}</p>\n                </div>\n            ))}\n            <Winner winner={round_winner} points={round_winner_points}/>\n            <img className='redRound1Voting' src='https://jackboxgames.com/wp-content/uploads/2019/07/Red.gif' alt='quiplash icon'></img>\n            <img className='blueRound1Voting' src='https://jackboxgames.com/wp-content/uploads/2019/07/Blue.gif' alt='quiplash icon'></img>\n            <Button className='getRoundWinner' size='medium' color='grey' onClick={() => getRoundWinner()}>Get Winner</Button>\n            <Button className='nextRound' onClick={() => goToNextRound()}>Next Round</Button>\n        </div>\n        )\n    }\n    if(stage === 4) {\n        return (\n            <div>\n                <h1>Next round of questions go here!</h1>\n            </div>   \n        )\n    }\n    return (\n        <div className='game-container'>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}