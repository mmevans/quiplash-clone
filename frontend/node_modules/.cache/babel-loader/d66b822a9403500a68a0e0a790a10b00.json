{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Landing/SignupForm.js\";\nimport React from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../../actions/userActions';\nexport function SignupForm(props) {\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.name.value,\n        email: e.target.email.value,\n        password: e.target.password.value\n      })\n    });\n  } //  if (this.state.redirect) {\n  // return <Redirect push to={`/student/${this.state.userID}/home`}></Redirect>\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"This is the Signup Form\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, console.log(props.users)), React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Name: \"), React.createElement(\"input\", {\n    placeholder: \"Name\",\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Email: \"), React.createElement(\"input\", {\n    placeholder: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password_confirmation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    className: \"signupButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nconst mapStateToProps = state => ({\n  users: state.signup.users\n});\n\nexport default connect(mapStateToProps, {\n  fetchUsers\n})(SignupForm);","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Landing/SignupForm.js"],"names":["React","Button","Form","connect","fetchUsers","SignupForm","props","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","target","name","value","email","password","console","log","users","mapStateToProps","state","signup"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../../actions/userActions'\n\n\nexport function SignupForm(props) {\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        let response = await fetch('http://localhost:3000/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: e.target.name.value,\n                email: e.target.email.value,\n                password: e.target.password.value\n            })\n        })\n    }\n//  if (this.state.redirect) {\n// return <Redirect push to={`/student/${this.state.userID}/home`}></Redirect>\n    return(\n        <div>\n        <h1>This is the Signup Form</h1>\n        <p>{console.log(props.users)}</p>\n        <Form onSubmit={handleSubmit}>\n        <Form.Field required>\n            <label>Name: </label>\n            <input placeholder='Name' name='name'/>\n        </Form.Field>\n        <Form.Field required>\n            <label>Email: </label>\n            <input placeholder='email' name='email'/>\n        </Form.Field>\n        <Form.Field required>\n            <label>Password</label>\n            <input type='password' name='password'/>\n        </Form.Field>\n        <Form.Field required>\n            <label>Confirm Password</label>\n            <input type='password' name='password_confirmation'/>\n        </Form.Field>\n        <Button type='submit' className='signupButton'>Submit</Button>\n        </Form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    users: state.signup.users\n})\n\nexport default connect(mapStateToProps, { fetchUsers })(SignupForm)"]},"metadata":{},"sourceType":"module"}