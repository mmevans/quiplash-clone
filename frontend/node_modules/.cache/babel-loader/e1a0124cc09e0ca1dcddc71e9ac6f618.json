{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { setName, setRoom } from '../../actions/joinRoomActions';\nimport { getQuestions } from '../../actions/gameActions';\nlet socket;\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const roomID = useSelector(state => state.joinRoom.room_id);\n  const questions = useSelector(state => state.game.prompts);\n  const ENDPOINT = 'localhost:3000';\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    dispatch(setName(name));\n    dispatch(setRoom(room));\n    dispatch(getQuestions());\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('player-list', player => {\n      if (player.player !== \"undefined\" && player.player !== username) {\n        const name = player.player;\n      }\n    });\n  }, [listOfPlayers]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Main Lobby\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","io","setName","setRoom","getQuestions","socket","MainLobby","props","dispatch","roomID","state","joinRoom","room_id","questions","game","prompts","ENDPOINT","parse","location","search","name","room","emit","off","on","player","username","listOfPlayers"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,+BAA/B;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AAGA,IAAIC,MAAJ;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,MAAM,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,OAAzB,CAA1B;AACA,QAAMC,SAAS,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACI,IAAN,CAAWC,OAArB,CAA7B;AACA,QAAMC,QAAQ,GAAG,gBAAjB;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AAAA,+BACSG,WAAW,CAACiB,KAAZ,CAAkBV,KAAK,CAACW,QAAN,CAAeC,MAAjC,CADT;AAAA,UACLC,IADK,sBACLA,IADK;AAAA,UACCC,IADD,sBACCA,IADD;;AAEZhB,IAAAA,MAAM,GAAGJ,EAAE,CAACe,QAAD,CAAX;AAEAR,IAAAA,QAAQ,CAACN,OAAO,CAACkB,IAAD,CAAR,CAAR;AACAZ,IAAAA,QAAQ,CAACL,OAAO,CAACkB,IAAD,CAAR,CAAR;AACAb,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AAEAC,IAAAA,MAAM,CAACiB,IAAP,CAAY,MAAZ,EAAqB;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAArB,EAAmC,MAAM,CAExC,CAFD;AAIA,WAAM,MAAM;AACRhB,MAAAA,MAAM,CAACiB,IAAP,CAAY,YAAZ;AACAjB,MAAAA,MAAM,CAACkB,GAAP;AACH,KAHD;AAIH,GAhBQ,EAgBN,CAACP,QAAD,CAhBM,CAAT;AAkBAnB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,MAAM,CAACmB,EAAP,CAAU,aAAV,EAA0BC,MAAD,IAAY;AACjC,UAAGA,MAAM,CAACA,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACA,MAAP,KAAkBC,QAAtD,EAAgE;AAC5D,cAAMN,IAAI,GAAGK,MAAM,CAACA,MAApB;AACH;AACJ,KAJD;AAKH,GANQ,EAMN,CAACE,aAAD,CANM,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAzCM;AA2CP,eAAerB,SAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport {setName, setRoom} from '../../actions/joinRoomActions'\nimport {getQuestions} from '../../actions/gameActions'\n\n\nlet socket;\n\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const roomID = useSelector(state => state.joinRoom.room_id)\n    const questions = useSelector(state => state.game.prompts)\n    const ENDPOINT = 'localhost:3000'\n\n    \n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT);\n\n        dispatch(setName(name))\n        dispatch(setRoom(room))\n        dispatch(getQuestions())\n        \n        socket.emit('join',  {name, room}, () => {\n\n        });\n\n        return() => {\n            socket.emit('disconnect');\n            socket.off();\n        }\n    }, [ENDPOINT])\n\n    useEffect(() => {\n        socket.on('player-list', (player) => {\n            if(player.player !== \"undefined\" && player.player !== username) {\n                const name = player.player\n            }\n        })\n    }, [listOfPlayers])\n\n\n    return (\n        <div>\n            <h1>Main Lobby</h1>\n            <div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}