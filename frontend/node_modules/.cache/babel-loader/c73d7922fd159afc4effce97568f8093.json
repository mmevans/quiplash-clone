{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css';\nimport { setStage, updateAnswersForVoting, addPoints, determineWinner } from '../../actions/gameActions';\nimport { setIsActive, setSeconds } from '../../actions/timerActions';\nimport Timer from '../Timer/Timer';\nconst ENDPOINT = 'localhost:3000';\nlet socket = io(ENDPOINT);\nexport const Game = props => {\n  const dispatch = useDispatch();\n  const stage = useSelector(state => state.game.stage);\n  const isActive = useSelector(state => state.timer.isActive);\n  const seconds = useSelector(state => state.timer.seconds);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n  const count_of_answers = useSelector(state => state.player.count_of_answers);\n  const questions_round_1 = useSelector(state => state.game.questions_round_1);\n  const selectedQuestion = useSelector(state => state.game.selectedQuestion);\n  const round_winnner = useSelector(state => state.game.round_winnner);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(setStage());\n      dispatch(setIsActive());\n      dispatch(setSeconds(80)); // give all the players their prompts to answer on screen\n    }, 5000);\n    socket.on('ready-to-vote', ({\n      allPlayersInGame,\n      selectedQuestion\n    }) => {\n      dispatch(setIsActive());\n      dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion));\n      dispatch(setStage());\n    });\n    return () => clearTimeout(timer);\n  }, []);\n  useEffect(() => {\n    socket.on('cast-vote-round-1-to-host', (answer, callback) => {\n      dispatch(addPoints(answer));\n    });\n  }, [count_of_answers]); // useEffect(() => {\n  //     if (count_of_answers === playersInRoom.length) {\n  //         dispatch(determineWinner())\n  //     }\n  // }, [count_of_answers])\n\n  if (stage === 1) {\n    return React.createElement(\"div\", {\n      className: \"gameInstructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Welcome to a Quiplash Clone!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" Each player will be given two prompts to answer per round \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" After everyone is done answering the prompts, you decide who had the better response!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"You will have 60 seconds to come up with your best reponses.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Good luck!\"));\n  }\n\n  if (stage === 2) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n  if (stage === 3) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, questions_round_1[selectedQuestion].prompt), questions_round_1[selectedQuestion].answers.map(answer => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, answer))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, round_winnner));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"game-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Timer: \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Question:\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"The Game\"));\n};\nexport default Game;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js"],"names":["React","useEffect","useDispatch","useSelector","io","setStage","updateAnswersForVoting","addPoints","determineWinner","setIsActive","setSeconds","Timer","ENDPOINT","socket","Game","props","dispatch","stage","state","game","isActive","timer","seconds","playersInRoom","count_of_answers","player","questions_round_1","selectedQuestion","round_winnner","setTimeout","on","allPlayersInGame","clearTimeout","answer","callback","prompt","answers","map"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css'\nimport { setStage, updateAnswersForVoting, addPoints, determineWinner } from '../../actions/gameActions'\nimport { setIsActive, setSeconds } from '../../actions/timerActions'\nimport Timer from '../Timer/Timer'\nconst ENDPOINT = 'localhost:3000'\nlet socket = io(ENDPOINT);\n\n\nexport const Game = (props) => {\n\n    const dispatch = useDispatch();\n    const stage = useSelector(state => state.game.stage);\n    const isActive = useSelector(state => state.timer.isActive)\n    const seconds = useSelector(state => state.timer.seconds)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    const count_of_answers = useSelector(state => state.player.count_of_answers)\n    const questions_round_1 = useSelector(state => state.game.questions_round_1)\n    const selectedQuestion = useSelector(state => state.game.selectedQuestion)\n    const round_winnner = useSelector(state => state.game.round_winnner)\n\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            dispatch(setStage())\n            dispatch(setIsActive())\n            dispatch(setSeconds(80))\n            // give all the players their prompts to answer on screen\n        }, 5000);\n        socket.on('ready-to-vote', ({ allPlayersInGame, selectedQuestion }) => {\n            dispatch(setIsActive())\n            dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion))\n            dispatch(setStage())\n        })\n        return () => clearTimeout(timer);\n    }, []);\n\n    useEffect(() => {\n        socket.on('cast-vote-round-1-to-host', (answer, callback) => {\n            dispatch(addPoints(answer))\n        })\n    }, [count_of_answers])\n\n    // useEffect(() => {\n    //     if (count_of_answers === playersInRoom.length) {\n    //         dispatch(determineWinner())\n    //     }\n    // }, [count_of_answers])\n\n\n    if (stage === 1) {\n        return (\n            <div className='gameInstructions'>\n                <p>Welcome to a Quiplash Clone!</p>\n                <p> Each player will be given two prompts to answer per round </p>\n                <p> After everyone is done answering the prompts, you decide who had the better response!</p>\n                <p>You will have 60 seconds to come up with your best reponses.</p>\n                <p>Good luck!</p>\n            </div>\n        )\n    }\n    if (stage === 2) {\n        return (\n            <div>\n                <Timer />\n            </div>\n        )\n    }\n    if (stage === 3) {\n        return (\n            <div>\n                <div>\n                    {questions_round_1[selectedQuestion].prompt}\n                </div>\n                {questions_round_1[selectedQuestion].answers.map(answer => (\n                    <div>\n                        <h1>{answer}</h1>\n                    </div>\n                ))}\n                <h1>{round_winnner}</h1>\n            </div>\n        )\n    }\n    return (\n        <div className='game-container'>\n            <div><p>Timer: </p></div>\n\n            <div><p>Question:</p></div>\n            <h1>The Game</h1>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}