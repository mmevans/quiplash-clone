{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport { getPlayersInRoom, startingGame, changePlayerView, generateQuestions } from '../../actions/gameActions';\nimport PlayerContainer from './PlayerContainer';\nimport { Button } from 'semantic-ui-react';\nimport Game from '../Game/Game';\nimport PlayerView from '../PlayerView/PlayerView';\nlet socket;\nconst ENDPOINT = 'localhost:3000';\nexport const MainLobby = props => {\n  const dispatch = useDispatch();\n  const goToLobby = useSelector(state => state.userHome.goToLobby);\n  const playerNames = useSelector(state => state.game.playerNames);\n  const gameStarted = useSelector(state => state.game.gameStarted);\n  const playerView = useSelector(state => state.game.playerView);\n  const playersInRoom = useSelector(state => state.game.playersInRoom);\n  const allQuestions = useSelector(state => state.game.questions);\n  useEffect(() => {\n    const _queryString$parse = queryString.parse(props.location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n\n    if (goToLobby === true) {\n      socket.emit('create-game', {\n        name,\n        room\n      }, () => {});\n    } else {\n      socket.emit('join', {\n        name,\n        room\n      }, () => {});\n    }\n  });\n  useEffect(() => {\n    socket.on('get-players-in-room', async (room, callback) => {\n      dispatch(getPlayersInRoom(room));\n    });\n  });\n  useEffect(() => {\n    socket.on('change-player-view', callback => {\n      dispatch(changePlayerView());\n    });\n  }, []);\n\n  const startGame = () => {\n    socket = io(ENDPOINT);\n\n    const _queryString$parse2 = queryString.parse(props.location.search),\n          room = _queryString$parse2.room;\n\n    dispatch(startingGame());\n    dispatch(generateQuestions(room));\n    socket.emit('game-started', room, () => {});\n    debugger;\n  };\n\n  if (goToLobby === true && gameStarted === false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-lobby-screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Users currently in the lobby Max 8\"), React.createElement(PlayerContainer, {\n      players: playerNames,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => startGame(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Start Game\")));\n  } else if (gameStarted === true) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Game, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  } else if (playerView === true) {\n    return React.createElement(PlayerView, {\n      players: playersInRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Waiting To Start The Game!\"));\n};\nexport default MainLobby;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/MainLobby/MainLobby.js"],"names":["React","useEffect","useDispatch","useSelector","queryString","io","getPlayersInRoom","startingGame","changePlayerView","generateQuestions","PlayerContainer","Button","Game","PlayerView","socket","ENDPOINT","MainLobby","props","dispatch","goToLobby","state","userHome","playerNames","game","gameStarted","playerView","playersInRoom","allQuestions","questions","parse","location","search","name","room","emit","on","callback","startGame"],"mappings":"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","sourcesContent":["\nimport React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport {getPlayersInRoom, startingGame, changePlayerView, generateQuestions} from '../../actions/gameActions'\nimport PlayerContainer from './PlayerContainer'\nimport {Button} from 'semantic-ui-react'\nimport Game from '../Game/Game'\nimport PlayerView from '../PlayerView/PlayerView'\n\n\nlet socket;\nconst ENDPOINT = 'localhost:3000'\n\nexport const MainLobby = (props) => {\n    const dispatch = useDispatch();\n    const goToLobby = useSelector(state => state.userHome.goToLobby)\n    const playerNames = useSelector(state => state.game.playerNames)\n    const gameStarted = useSelector(state => state.game.gameStarted)\n    const playerView = useSelector(state => state.game.playerView)\n    const playersInRoom = useSelector(state => state.game.playersInRoom)\n    const allQuestions = useSelector(state => state.game.questions)\n    \n    useEffect(() => {\n        const {name, room} = queryString.parse(props.location.search)\n        socket = io(ENDPOINT)\n        if(goToLobby === true) {\n            socket.emit('create-game', {name, room}, () => {})\n        } else {\n            socket.emit('join', {name, room}, () => {\n            }) \n        }\n    })\n\n    useEffect(() => {\n        socket.on('get-players-in-room', async (room, callback) => {\n            dispatch(getPlayersInRoom(room))\n        })\n    })\n\n    useEffect(() => {\n        socket.on('change-player-view', (callback) => {\n            dispatch(changePlayerView())\n        })\n    }, [])\n\n    const startGame = () => {\n        socket = io(ENDPOINT);\n        const {room} = queryString.parse(props.location.search)\n        dispatch(startingGame())\n        dispatch(generateQuestions(room))\n        socket.emit('game-started', room, () => { \n        })\n        debugger\n    } \n  \n\n    if(goToLobby === true && gameStarted === false) {\n        return (\n            <div>\n                <div className='main-lobby-screen'>\n                    <p> Users currently in the lobby Max 8</p>\n                    <PlayerContainer players={playerNames}/>\n                </div>\n            <div>\n                <Button onClick={() => startGame()}>Start Game</Button>\n            </div>\n        </div>\n    )\n    }   else if (gameStarted === true) {\n        return (\n            <div>\n                <Game/>\n             </div>\n        \n        )\n    } else if (playerView === true) {\n        return (\n            <PlayerView players = {playersInRoom}/>\n        )\n    }\n        return (\n            <div>\n                <p>Waiting To Start The Game!</p>\n            </div>\n        )\n    }\nexport default MainLobby"]},"metadata":{},"sourceType":"module"}