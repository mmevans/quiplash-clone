{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/PlayerView/PlayerView.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport { setStage, updateAnswersForVoting } from '../../actions/gameActions';\nimport { getPlayerInfo, addPlayerAnswers, updateAnswersToState } from '../../actions/playerActions';\nimport queryString from 'query-string';\nconst ENDPOINT = 'localhost:3000';\nlet socket = io(ENDPOINT);\nexport const PlayerView = props => {\n  const _queryString$parse = queryString.parse(props.location.search),\n        name = _queryString$parse.name,\n        room = _queryString$parse.room,\n        lobby = _queryString$parse.lobby;\n\n  const dispatch = useDispatch();\n  const stage = useSelector(state => state.game.stage);\n  const prompt1 = useSelector(state => state.player.prompt1);\n  const prompt2 = useSelector(state => state.player.prompt2);\n  const prompt3 = useSelector(state => state.player.prompt3);\n  const prompt4 = useSelector(state => state.player.prompt4);\n  const prompt5 = useSelector(state => state.player.prompt5);\n  const prompt6 = useSelector(state => state.player.prompt6);\n  const answers_round_1 = useSelector(state => state.player.answers_round_1);\n  const answers_round_2 = useSelector(state => state.player.answers_round_2);\n  const answers_round_3 = useSelector(state => state.player.answers_round_3);\n  const questions_round_1 = useSelector(state => state.game.questions_round_1);\n  const selectedQuestion = useSelector(state => state.game.selectedQuestion);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(setStage());\n      dispatch(getPlayerInfo(name, room));\n    }, 5000);\n    console.log('OUT HERE');\n    socket.on('ready-to-vote', ({\n      allPlayersInGame,\n      selectedQuestion\n    }) => {\n      console.log(\"Im here\");\n      dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion));\n      dispatch(setStage());\n    });\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (stage === 2) {\n      dispatch(updateAnswersToState(e.target[0].value, stage));\n      dispatch(setStage());\n      e.target.reset();\n    }\n\n    if (stage === 3) {\n      dispatch(updateAnswersToState(e.target[0].value, stage));\n      dispatch(setStage());\n    }\n  };\n\n  useEffect(() => {\n    if (answers_round_1.length === 2) {\n      dispatch(addPlayerAnswers(name, room, stage, answers_round_1));\n    }\n  }, [answers_round_1, dispatch, name, room, stage]);\n\n  const submitAnswer = answer => {\n    socket.emit('cast-vote-round-1', answer => {});\n  };\n\n  if (stage === 1) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Get Ready!\"));\n  }\n\n  if (stage === 2) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, prompt1 !== undefined ? prompt1 : null), React.createElement(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      row: \"4\",\n      cols: \"50\",\n      name: \"answer1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n  if (stage === 3) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, prompt2 !== undefined ? prompt2 : null), React.createElement(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      row: \"4\",\n      cols: \"50\",\n      name: \"answer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n  if (stage === 4) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Waiting on other players...\"));\n  }\n\n  if (stage === 5) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Voting Screen\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, questions_round_1[selectedQuestion].answers.map((answer, index) => React.createElement(\"button\", {\n      onClick: e => submitAnswer(answer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" \", index + 1, \" \"))));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Get Ready!\"));\n};\nexport default PlayerView;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/PlayerView/PlayerView.js"],"names":["React","useEffect","useDispatch","useSelector","io","setStage","updateAnswersForVoting","getPlayerInfo","addPlayerAnswers","updateAnswersToState","queryString","ENDPOINT","socket","PlayerView","props","parse","location","search","name","room","lobby","dispatch","stage","state","game","prompt1","player","prompt2","prompt3","prompt4","prompt5","prompt6","answers_round_1","answers_round_2","answers_round_3","questions_round_1","selectedQuestion","timer","setTimeout","console","log","on","allPlayersInGame","clearTimeout","handleSubmit","e","preventDefault","target","value","reset","length","submitAnswer","answer","emit","undefined","answers","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAQC,QAAR,EAAkBC,sBAAlB,QAA+C,2BAA/C;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,EAAyCC,oBAAzC,QAAoE,6BAApE;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAGA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,IAAIC,MAAM,GAAGR,EAAE,CAACO,QAAD,CAAf;AAEA,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;AAAA,6BACLJ,WAAW,CAACK,KAAZ,CAAkBD,KAAK,CAACE,QAAN,CAAeC,MAAjC,CADK;AAAA,QAC1BC,IAD0B,sBAC1BA,IAD0B;AAAA,QACpBC,IADoB,sBACpBA,IADoB;AAAA,QACdC,KADc,sBACdA,KADc;;AAGjC,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,KAAK,GAAGnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB;AACA,QAAMG,OAAO,GAAGtB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaD,OAAvB,CAA3B;AACA,QAAME,OAAO,GAAGxB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaC,OAAvB,CAA3B;AACA,QAAMC,OAAO,GAAGzB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaE,OAAvB,CAA3B;AACA,QAAMC,OAAO,GAAG1B,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaG,OAAvB,CAA3B;AACA,QAAMC,OAAO,GAAG3B,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaI,OAAvB,CAA3B;AACA,QAAMC,OAAO,GAAG5B,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaK,OAAvB,CAA3B;AACA,QAAMC,eAAe,GAAG7B,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaM,eAAvB,CAAnC;AACA,QAAMC,eAAe,GAAG9B,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaO,eAAvB,CAAnC;AACA,QAAMC,eAAe,GAAG/B,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaQ,eAAvB,CAAnC;AAEA,QAAMC,iBAAiB,GAAGhC,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWW,iBAArB,CAArC;AACA,QAAMC,gBAAgB,GAAGjC,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWY,gBAArB,CAApC;AAEAnC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC/BjB,MAAAA,QAAQ,CAAChB,QAAQ,EAAT,CAAR;AACAgB,MAAAA,QAAQ,CAACd,aAAa,CAACW,IAAD,EAAOC,IAAP,CAAd,CAAR;AACC,KAHuB,EAGrB,IAHqB,CAAxB;AAKAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA5B,IAAAA,MAAM,CAAC6B,EAAP,CAAU,eAAV,EAA2B,CAAC;AAAEC,MAAAA,gBAAF;AAAoBN,MAAAA;AAApB,KAAD,KAA4C;AACnEG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAnB,MAAAA,QAAQ,CAACf,sBAAsB,CAACoC,gBAAD,EAAmBN,gBAAnB,CAAvB,CAAR;AACAf,MAAAA,QAAQ,CAAChB,QAAQ,EAAT,CAAR;AACH,KAJD;AAOA,WAAO,MAAMsC,YAAY,CAACN,KAAD,CAAzB;AACD,GAfM,EAeJ,EAfI,CAAT;;AAiBA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGxB,KAAK,KAAK,CAAb,EAAgB;AACZD,MAAAA,QAAQ,CAACZ,oBAAoB,CAACoC,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAb,EAAoB1B,KAApB,CAArB,CAAR;AACAD,MAAAA,QAAQ,CAAChB,QAAQ,EAAT,CAAR;AACAwC,MAAAA,CAAC,CAACE,MAAF,CAASE,KAAT;AACH;;AACD,QAAG3B,KAAK,KAAK,CAAb,EAAgB;AACZD,MAAAA,QAAQ,CAACZ,oBAAoB,CAACoC,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYC,KAAb,EAAoB1B,KAApB,CAArB,CAAR;AACAD,MAAAA,QAAQ,CAAChB,QAAQ,EAAT,CAAR;AACH;AACJ,GAXD;;AAaAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG+B,eAAe,CAACkB,MAAhB,KAA2B,CAA9B,EAAiC;AAC7B7B,MAAAA,QAAQ,CAACb,gBAAgB,CAACU,IAAD,EAAOC,IAAP,EAAaG,KAAb,EAAoBU,eAApB,CAAjB,CAAR;AACH;AAEJ,GALQ,EAKN,CAACA,eAAD,EAAkBX,QAAlB,EAA4BH,IAA5B,EAAkCC,IAAlC,EAAwCG,KAAxC,CALM,CAAT;;AAOA,QAAM6B,YAAY,GAAIC,MAAD,IAAY;AAC7BxC,IAAAA,MAAM,CAACyC,IAAP,CAAY,mBAAZ,EAAkCD,MAAD,IAAY,CAE5C,CAFD;AAGH,GAJD;;AAMA,MAAG9B,KAAK,KAAK,CAAb,EAAgB;AACZ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH;;AACD,MAAGA,KAAK,KAAK,CAAb,EAAgB;AACZ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKG,OAAO,KAAK6B,SAAZ,GAAwB7B,OAAxB,GAAkC,IAAvC,CADJ,EAEI;AAAM,MAAA,QAAQ,EAAGoB,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,GAAG,EAAC,GAAd;AAAkB,MAAA,IAAI,EAAC,IAAvB;AAA4B,MAAA,IAAI,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAFJ,CADJ;AAUH;;AACD,MAAGvB,KAAK,KAAK,CAAb,EAAgB;AACZ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKK,OAAO,KAAK2B,SAAZ,GAAwB3B,OAAxB,GAAkC,IAAvC,CADC,EAEA;AAAM,MAAA,QAAQ,EAAGkB,CAAD,IAAOD,YAAY,CAACC,CAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,GAAG,EAAC,GAAd;AAAkB,MAAA,IAAI,EAAC,IAAvB;AAA4B,MAAA,IAAI,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAFA,CADJ;AAUH;;AACD,MAAGvB,KAAK,KAAK,CAAb,EAAgB;AACZ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CADJ;AAKH;;AACD,MAAGA,KAAK,KAAK,CAAb,EAAgB;AACZ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKa,iBAAiB,CAACC,gBAAD,CAAjB,CAAoCmB,OAApC,CAA4CC,GAA5C,CAAiD,CAACJ,MAAD,EAASK,KAAT,KAC9C;AAAQ,MAAA,OAAO,EAAGZ,CAAD,IAAOM,YAAY,CAACC,MAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgDK,KAAK,GAAG,CAAxD,MADH,CADL,CAFJ,CADJ;AAUH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAKH,CApHM;AAsHP,eAAe5C,UAAf","sourcesContent":["import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport io from 'socket.io-client';\nimport {setStage, updateAnswersForVoting} from '../../actions/gameActions'\nimport {getPlayerInfo, addPlayerAnswers, updateAnswersToState} from '../../actions/playerActions'\nimport queryString from 'query-string';\n\n\nconst ENDPOINT = 'localhost:3000'\nlet socket = io(ENDPOINT)\n\nexport const PlayerView = (props) => {\n    const {name, room, lobby} = queryString.parse(props.location.search)\n\n    const dispatch = useDispatch();\n    const stage = useSelector(state => state.game.stage);\n    const prompt1 = useSelector(state => state.player.prompt1)\n    const prompt2 = useSelector(state => state.player.prompt2)\n    const prompt3 = useSelector(state => state.player.prompt3)\n    const prompt4 = useSelector(state => state.player.prompt4)\n    const prompt5 = useSelector(state => state.player.prompt5)\n    const prompt6 = useSelector(state => state.player.prompt6)\n    const answers_round_1 = useSelector(state => state.player.answers_round_1)\n    const answers_round_2 = useSelector(state => state.player.answers_round_2)\n    const answers_round_3 = useSelector(state => state.player.answers_round_3)\n\n    const questions_round_1 = useSelector(state => state.game.questions_round_1)\n    const selectedQuestion = useSelector(state => state.game.selectedQuestion)\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n        dispatch(setStage())\n        dispatch(getPlayerInfo(name, room))\n        }, 5000);\n\n        console.log('OUT HERE')\n        socket.on('ready-to-vote', ({ allPlayersInGame, selectedQuestion }) => {\n            console.log(\"Im here\")\n            dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion))\n            dispatch(setStage())\n        })\n\n\n        return () => clearTimeout(timer);\n      }, []);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(stage === 2) {\n            dispatch(updateAnswersToState(e.target[0].value, stage))\n            dispatch(setStage())\n            e.target.reset()\n        }\n        if(stage === 3) {\n            dispatch(updateAnswersToState(e.target[0].value, stage))\n            dispatch(setStage())\n        }\n    }\n\n    useEffect(() => {\n        if(answers_round_1.length === 2) {\n            dispatch(addPlayerAnswers(name, room, stage, answers_round_1))\n        }\n     \n    }, [answers_round_1, dispatch, name, room, stage])\n\n    const submitAnswer = (answer) => {\n        socket.emit('cast-vote-round-1', (answer) => {\n\n        })\n    }\n\n    if(stage === 1) {\n        return (\n            <div>\n                <h1>Get Ready!</h1>\n            </div>\n        )\n    }\n    if(stage === 2) {\n        return (\n            <div>\n                <h1>{prompt1 !== undefined ? prompt1 : null}</h1>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <textarea row='4' cols='50' name='answer1'>\n                    </textarea>\n                    <button >Submit</button>\n                </form>\n            </div>\n        )  \n    }\n    if(stage === 3) {\n        return (\n            <div>\n           <h1>{prompt2 !== undefined ? prompt2 : null}</h1>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <textarea row='4' cols='50' name='answer2'>\n                </textarea>\n                <button>Submit</button>\n            </form>\n        </div> \n        )\n    }\n    if(stage === 4) {\n        return (\n            <div>\n                <h2>Waiting on other players...</h2>\n            </div>\n        )\n    }\n    if(stage === 5) {\n        return (\n            <div>\n                <h1>Voting Screen</h1>\n                <div>\n                    {questions_round_1[selectedQuestion].answers.map( (answer, index) => (\n                        <button onClick={(e) => submitAnswer(answer)}> {index + 1} </button>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <h1>Get Ready!</h1> \n        </div>\n    )\n}\n\nexport default PlayerView"]},"metadata":{},"sourceType":"module"}