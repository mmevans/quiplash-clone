{"ast":null,"code":"import { FETCH_COLLECTION, GET_PLAYERS, ADD_PLAYER, SET_STAGE } from './types';\nexport const getQuestions = () => dispatch => {\n  fetch('http://localhost:3000/collectioncards').then(res => res.json()).then(collection => {\n    var title = collection[0].name;\n    var questions = [];\n    collection.map(index => questions.push(index.prompt));\n    dispatch({\n      type: FETCH_COLLECTION,\n      title,\n      questions\n    });\n  });\n};\nexport const addPlayer = player => async dispatch => {\n  const url = 'http://localhost:3000/players-in-game/';\n  const settings = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    body: JSON.stringify(player)\n  };\n  var res = await fetch(url, settings);\n  var newPlayer = await res.json();\n  dispatch({\n    type: ADD_PLAYER,\n    payload: newPlayer.name\n  });\n};\nexport const getPlayersInRoom = room_id => async dispatch => {\n  const url = \"http://localhost:3000/players-in-room/\".concat(room_id);\n  var res = await fetch(url);\n  var players = await res.json(); // var playerNames = [];\n  // players.map((player) => (\n  //     playerNames.push(player.name)\n  // ))\n\n  dispatch({\n    type: GET_PLAYERS,\n    players\n  });\n}; // export const setStage = () => dispatch => {\n//     dispatch({\n//         type: SET_STAGE\n//     })\n// }","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/actions/gameActions.js"],"names":["FETCH_COLLECTION","GET_PLAYERS","ADD_PLAYER","SET_STAGE","getQuestions","dispatch","fetch","then","res","json","collection","title","name","questions","map","index","push","prompt","type","addPlayer","player","url","settings","method","headers","body","JSON","stringify","newPlayer","payload","getPlayersInRoom","room_id","players"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,SAAnD,QAAmE,SAAnE;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AAC1CC,EAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,UAAD,IAAgB;AAClB,QAAIC,KAAK,GAAGD,UAAU,CAAC,CAAD,CAAV,CAAcE,IAA1B;AACA,QAAIC,SAAS,GAAG,EAAhB;AAEAH,IAAAA,UAAU,CAACI,GAAX,CAAgBC,KAAD,IACXF,SAAS,CAACG,IAAV,CAAeD,KAAK,CAACE,MAArB,CADJ;AAIAZ,IAAAA,QAAQ,CAAC;AACLa,MAAAA,IAAI,EAAElB,gBADD;AAELW,MAAAA,KAFK;AAGLE,MAAAA;AAHK,KAAD,CAAR;AAKH,GAfD;AAiBH,CAlBM;AAmBP,OAAO,MAAMM,SAAS,GAAIC,MAAD,IAAY,MAAMf,QAAN,IAAkB;AAC/C,QAAMgB,GAAG,GAAG,wCAAZ;AACA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,gBAAU;AAFL,KAFI;AAMbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AANO,GAAjB;AAQA,MAAIZ,GAAG,GAAG,MAAMF,KAAK,CAACe,GAAD,EAAMC,QAAN,CAArB;AACA,MAAIM,SAAS,GAAG,MAAMpB,GAAG,CAACC,IAAJ,EAAtB;AACAJ,EAAAA,QAAQ,CAAC;AACLa,IAAAA,IAAI,EAAEhB,UADD;AAEL2B,IAAAA,OAAO,EAAED,SAAS,CAAChB;AAFd,GAAD,CAAR;AAMP,CAlBM;AAoBP,OAAO,MAAMkB,gBAAgB,GAAIC,OAAD,IAAa,MAAM1B,QAAN,IAAkB;AAC3D,QAAMgB,GAAG,mDAA4CU,OAA5C,CAAT;AACA,MAAIvB,GAAG,GAAG,MAAMF,KAAK,CAACe,GAAD,CAArB;AACA,MAAIW,OAAO,GAAG,MAAMxB,GAAG,CAACC,IAAJ,EAApB,CAH2D,CAI3D;AACA;AACA;AACA;;AACAJ,EAAAA,QAAQ,CAAC;AACLa,IAAAA,IAAI,EAAEjB,WADD;AAEL+B,IAAAA;AAFK,GAAD,CAAR;AAIH,CAZM,C,CAcP;AACA;AACA;AACA;AACA","sourcesContent":["import {FETCH_COLLECTION, GET_PLAYERS, ADD_PLAYER, SET_STAGE} from './types'\n\n\n\nexport const getQuestions = () => dispatch => {\n    fetch('http://localhost:3000/collectioncards')\n    .then(res => res.json())\n    .then((collection) => {\n        var title = collection[0].name\n        var questions = [];\n\n        collection.map((index) => (\n            questions.push(index.prompt)\n        ))\n        \n        dispatch({\n            type: FETCH_COLLECTION,\n            title,\n            questions\n        })\n    } \n    )\n}\nexport const addPlayer = (player) => async dispatch => {\n        const url = 'http://localhost:3000/players-in-game/'\n        const settings = {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(player)\n        }\n        var res = await fetch(url, settings)\n        var newPlayer = await res.json();\n        dispatch({\n            type: ADD_PLAYER,\n            payload: newPlayer.name\n\n        })\n        \n}\n\nexport const getPlayersInRoom = (room_id) => async dispatch => {\n    const url = `http://localhost:3000/players-in-room/${room_id}`\n    var res = await fetch(url)\n    var players = await res.json();\n    // var playerNames = [];\n    // players.map((player) => (\n    //     playerNames.push(player.name)\n    // ))\n    dispatch({\n        type: GET_PLAYERS,\n        players\n    })\n}\n\n// export const setStage = () => dispatch => {\n//     dispatch({\n//         type: SET_STAGE\n//     })\n// }"]},"metadata":{},"sourceType":"module"}