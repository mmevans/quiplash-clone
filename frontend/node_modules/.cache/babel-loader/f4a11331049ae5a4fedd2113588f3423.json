{"ast":null,"code":"var _jsxFileName = \"/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css';\nimport { setStage, updateAnswersForVoting, addPoints, determineWinner } from '../../actions/gameActions';\nimport { setIsActive, setSeconds } from '../../actions/timerActions';\nimport Timer from '../Timer/Timer';\nconst ENDPOINT = 'localhost:3000';\nlet socket = io(ENDPOINT);\nexport const Game = props => {\n  const dispatch = useDispatch();\n  const stage = useSelector(state => state.game.stage);\n  const count_of_answers = useSelector(state => state.player.count_of_answers);\n  const questions_round_1 = useSelector(state => state.game.questions_round_1);\n  const selectedQuestion = useSelector(state => state.game.selectedQuestion);\n  const round_winnner = useSelector(state => state.game.round_winnner);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(setStage());\n      dispatch(setIsActive());\n      dispatch(setSeconds(80)); // give all the players their prompts to answer on screen\n    }, 5000);\n    socket.on('ready-to-vote', ({\n      allPlayersInGame,\n      selectedQuestion\n    }) => {\n      dispatch(setIsActive());\n      dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion));\n      dispatch(setStage());\n    });\n    return () => clearTimeout(timer);\n  }, [dispatch]);\n  useEffect(() => {\n    socket.on('cast-vote-round-1-to-host', (answer, callback) => {\n      dispatch(addPoints(answer));\n    });\n  }, [dispatch]);\n\n  if (count_of_answers === 3) {}\n\n  useEffect(() => {\n    if (count_of_answers === 1) {\n      console.log('run this');\n    }\n\n    if (count_of_answers === 2) {\n      console.log('run this maybe');\n    }\n\n    if (count_of_answers === 3) {\n      console.log('when does this run? Does this or update?');\n      dispatch(determineWinner());\n    }\n  }, [count_of_answers, dispatch]);\n\n  if (stage === 1) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Here are the Rules\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Each player will be given a prompt to answer. When everyone is done answering, \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" You will vote on your favorite answers!\"));\n  }\n\n  if (stage === 2) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n  if (stage === 3) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, questions_round_1[selectedQuestion].prompt), questions_round_1[selectedQuestion].answers.map(answer => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, answer))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, round_winnner));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"game-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Timer: \")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Question:\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"The Game\"));\n};\nexport default Game;","map":{"version":3,"sources":["/Users/mmevansjr/dev/mod5/frontend/src/components/Game/Game.js"],"names":["React","useEffect","useDispatch","useSelector","io","setStage","updateAnswersForVoting","addPoints","determineWinner","setIsActive","setSeconds","Timer","ENDPOINT","socket","Game","props","dispatch","stage","state","game","count_of_answers","player","questions_round_1","selectedQuestion","round_winnner","timer","setTimeout","on","allPlayersInGame","clearTimeout","answer","callback","console","log","prompt","answers","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,sBAAnB,EAA2CC,SAA3C,EAAsDC,eAAtD,QAA6E,2BAA7E;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,4BAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,QAAQ,GAAG,gBAAjB;AACA,IAAIC,MAAM,GAAGT,EAAE,CAACQ,QAAD,CAAf;AAEA,OAAO,MAAME,IAAI,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,KAAK,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB;AACA,QAAMG,gBAAgB,GAAGjB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaD,gBAAvB,CAApC;AACA,QAAME,iBAAiB,GAAGnB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,iBAArB,CAArC;AACA,QAAMC,gBAAgB,GAAGpB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWI,gBAArB,CAApC;AACA,QAAMC,aAAa,GAAGrB,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWK,aAArB,CAAjC;AAGAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BV,MAAAA,QAAQ,CAACX,QAAQ,EAAT,CAAR;AACAW,MAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACAO,MAAAA,QAAQ,CAACN,UAAU,CAAC,EAAD,CAAX,CAAR,CAH2B,CAI3B;AACH,KALuB,EAKrB,IALqB,CAAxB;AAMAG,IAAAA,MAAM,CAACc,EAAP,CAAU,eAAV,EAA2B,CAAC;AAAEC,MAAAA,gBAAF;AAAoBL,MAAAA;AAApB,KAAD,KAA4C;AACnEP,MAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACAO,MAAAA,QAAQ,CAACV,sBAAsB,CAACsB,gBAAD,EAAmBL,gBAAnB,CAAvB,CAAR;AACAP,MAAAA,QAAQ,CAACX,QAAQ,EAAT,CAAR;AACH,KAJD;AAKA,WAAO,MAAMwB,YAAY,CAACJ,KAAD,CAAzB;AACH,GAbQ,EAaN,CAACT,QAAD,CAbM,CAAT;AAeAf,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACc,EAAP,CAAU,2BAAV,EAAuC,CAACG,MAAD,EAASC,QAAT,KAAsB;AACzDf,MAAAA,QAAQ,CAACT,SAAS,CAACuB,MAAD,CAAV,CAAR;AACH,KAFD;AAGH,GAJQ,EAIN,CAACd,QAAD,CAJM,CAAT;;AAMA,MAAGI,gBAAgB,KAAK,CAAxB,EAA2B,CAE1B;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGmB,gBAAgB,KAAK,CAAxB,EAA2B;AACvBY,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;;AACD,QAAGb,gBAAgB,KAAK,CAAxB,EAA2B;AACvBY,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;;AACD,QAAGb,gBAAgB,KAAK,CAAxB,EAA2B;AACvBY,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAjB,MAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACH;AACJ,GAXQ,EAWN,CAACY,gBAAD,EAAmBJ,QAAnB,CAXM,CAAT;;AAaA,MAAIC,KAAK,KAAK,CAAd,EAAiB;AACb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHJ,CADJ;AAOH;;AACD,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AACD,MAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,iBAAiB,CAACC,gBAAD,CAAjB,CAAoCW,MADzC,CADJ,EAIKZ,iBAAiB,CAACC,gBAAD,CAAjB,CAAoCY,OAApC,CAA4CC,GAA5C,CAAgDN,MAAM,IACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAL,CADJ,CADH,CAJL,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,aAAL,CATJ,CADJ;AAaH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAL,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAL,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ;AAQH,CAtFM;AAwFP,eAAeV,IAAf","sourcesContent":["import React, {useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport io from 'socket.io-client';\nimport './Game.css'\nimport { setStage, updateAnswersForVoting, addPoints, determineWinner } from '../../actions/gameActions'\nimport { setIsActive, setSeconds } from '../../actions/timerActions'\nimport Timer from '../Timer/Timer'\n\nconst ENDPOINT = 'localhost:3000'\nlet socket = io(ENDPOINT);\n\nexport const Game = (props) => {\n    const dispatch = useDispatch();\n    const stage = useSelector(state => state.game.stage);\n    const count_of_answers = useSelector(state => state.player.count_of_answers)\n    const questions_round_1 = useSelector(state => state.game.questions_round_1)\n    const selectedQuestion = useSelector(state => state.game.selectedQuestion)\n    const round_winnner = useSelector(state => state.game.round_winnner)\n\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            dispatch(setStage())\n            dispatch(setIsActive())\n            dispatch(setSeconds(80))\n            // give all the players their prompts to answer on screen\n        }, 5000);\n        socket.on('ready-to-vote', ({ allPlayersInGame, selectedQuestion }) => {\n            dispatch(setIsActive())\n            dispatch(updateAnswersForVoting(allPlayersInGame, selectedQuestion))\n            dispatch(setStage())\n        })\n        return () => clearTimeout(timer);\n    }, [dispatch]);\n\n    useEffect(() => {\n        socket.on('cast-vote-round-1-to-host', (answer, callback) => {\n            dispatch(addPoints(answer))\n        })\n    }, [dispatch])\n\n    if(count_of_answers === 3) {\n\n    }\n \n    useEffect(() => {\n        if(count_of_answers === 1) {\n            console.log('run this')\n        }\n        if(count_of_answers === 2) {\n            console.log('run this maybe')\n        }\n        if(count_of_answers === 3) {\n            console.log('when does this run? Does this or update?')\n            dispatch(determineWinner())\n        }\n    }, [count_of_answers, dispatch])\n\n    if (stage === 1) {\n        return (\n            <div>\n                <p>Here are the Rules</p>\n                <p> Each player will be given a prompt to answer. When everyone is done answering, </p>\n                <p> You will vote on your favorite answers!</p>\n            </div>\n        )\n    }\n    if (stage === 2) {\n        return (\n            <div>\n                <Timer />\n            </div>\n        )\n    }\n    if (stage === 3) {\n        return (\n            <div>\n                <div>\n                    {questions_round_1[selectedQuestion].prompt}\n                </div>\n                {questions_round_1[selectedQuestion].answers.map(answer => (\n                    <div>\n                        <h1>{answer}</h1>\n                    </div>\n                ))}\n                <h1>{round_winnner}</h1>\n            </div>\n        )\n    }\n    return (\n        <div className='game-container'>\n            <div><p>Timer: </p></div>\n\n            <div><p>Question:</p></div>\n            <h1>The Game</h1>\n        </div>\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}